var w=Object.defineProperty,A=Object.defineProperties;var v=Object.getOwnPropertyDescriptors;var h=Object.getOwnPropertySymbols;var _=Object.prototype.hasOwnProperty,k=Object.prototype.propertyIsEnumerable;var L=(s,a,t)=>a in s?w(s,a,{enumerable:!0,configurable:!0,writable:!0,value:t}):s[a]=t,b=(s,a)=>{for(var t in a||(a={}))_.call(a,t)&&L(s,t,a[t]);if(h)for(var t of h(a))k.call(a,t)&&L(s,t,a[t]);return s},g=(s,a)=>A(s,v(a));var f=(s,a,t)=>new Promise((i,l)=>{var u=n=>{try{e(t.next(n))}catch(p){l(p)}},m=n=>{try{e(t.throw(n))}catch(p){l(p)}},e=n=>n.done?i(n.value):Promise.resolve(n.value).then(u,m);e((t=t.apply(s,a)).next())});import{r as E,c as D,i as B,t as T}from"./utils.4ce21b2a.js";import{h as M}from"./index.c8837098.js";import{d as O,B as z,u as F,E as V,S as R,J as H,o as I,b as J,I as N}from"./index.43eed5bc.js";import{u as P}from"./useProp.afe31ed3.js";const K=O({__name:"BasicLineChart",props:{component:null},setup(s){const a=s;E("mydark",T);const t=z(null);let i=null,l;const u=F(),m=()=>{i&&(i.clear(),n())},{propValue:e}=P(a.component,m);V(()=>f(this,null,function*(){l=d(),S(),yield n()}));const n=()=>f(this,null,function*(){try{const o=yield M.get({url:e.data.url});if(o.status===200){const r=e.data.upperLimit,c=e.data.lowerLimit,x=o.data.map(C=>D(Number(C.TagValue),r,c));y(x)}}catch(o){if(console.log((o==null?void 0:o.message)||o),u.isEditMode){const c=["\u79E6","\u9F50","\u695A","\u8D75","\u71D5","\u97E9","\u9B4F"].map(x=>({label:x,value:Math.round(Math.random()*(e.data.upperLimit||100))}));y(c)}}}),p=o=>{const r=o[0],{width:c,height:x}=r.contentRect;i==null||i.resize({width:c,height:x})},d=()=>{const o={grid:{top:"10%",left:"3%",right:"4%",bottom:"10%",containLabel:!0},tooltip:{trigger:"axis"},xAxis:{type:"category",data:[],splitLine:{show:e.axis.xshow,lineStyle:{type:e.axis.xLineType,color:e.axis.xAxisLineColor}},axisLine:{lineStyle:{color:e.axis.axisColor||"#fff"}},axisTick:{lineStyle:{color:e.axis.axisColor||"#fff"}},axisLabel:{color:e.axis.axisLabelColor||"#fff"}},yAxis:{type:"value",max:e.data.max?e.data.max:"dataMax",splitLine:{show:e.axis.yshow,lineStyle:{type:e.axis.yLineType,color:e.axis.yAxisLineColor}},axisLine:{lineStyle:{color:e.axis.axisColor||"#fff"}},axisTick:{lineStyle:{color:e.axis.axisColor||"#fff"}},axisLabel:{color:e.axis.axisLabelColor||"#fff"}},series:[]};let r=[{data:[],type:"line",symbol:"none",smooth:!0,markLine:{data:[]},areaStyle:{opacity:e.series.lineArea?.7:0},lineStyle:{width:1,color:e.series.lineColor||"#3491FA"},itemStyle:{color:{type:"linear",x:0,y:0,x2:0,y2:1,colorStops:[{offset:0,color:e.series.lineLinearStart||"#3491FA"},{offset:1,color:e.series.lineLinearEnd||"transparent"}],global:!1}}}];return o.series=r,o},y=o=>{l=d(),l.series[0].data=o.map(r=>r.value),l.xAxis=g(b({},l.xAxis),{data:o.map(r=>r.label)}),i&&i.setOption(l)},S=()=>{i=B(t.value,"mydark"),i.clear(),i.setOption(l)};return R(()=>{i&&(i.clear(),i.dispose())}),(o,r)=>{const c=N("resize");return H((I(),J("div",{ref_key:"chartEl",ref:t},null,512)),[[c,p]])}}});export{K as default};
