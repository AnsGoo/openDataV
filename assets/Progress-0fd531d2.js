import{d as B,e as d,k as y,f as P,I as R,L,l as o,J as F,h as H,w as T,o as s,c as u,a as n,F as x,i as W,t as E,n as j,_ as J}from"./index-dfdef63a.js";import{u as M}from"./index-c01320d9.js";const O={class:"dv-percent-pond"},X=["id"],q=["offset","stop-color"],A=["id","x2"],K=["offset","stop-color"],Q=["x","y","rx","ry","stroke-width","stroke","width","height"],U=["stroke-width","stroke-dasharray","stroke","points"],Y=["stroke","fill","x","y"],Z=B({__name:"Progress",props:{component:{}},setup(k){const G=k,{propValue:t}=M(G.component),c=d(150),i=d(150),v=d(60),h=d(`percent-pond-gradientId1-${y()}`),p=d(`percent-pond-gradientId2-${y()}`),N=r=>{const a=r.contentRect;c.value=a.width,i.value=a.height},w=r=>{const a=r;t.data.datatag&&a.TagName===t.data.datatag&&(v.value=Number((Number(a.TagValue)*100/Number(t.data.maxValue)).toFixed(2)))};P(async()=>{await $()});const $=async()=>{if(t.data.history)try{const r=await R.post({url:t.data.history,data:[t.data.datatag]});r.status===200&&(v.value=(Number(r.data.TagValue)||0)*100/Number(t.data.maxValue))}catch(r){L.log(r.message||r)}},e=o(()=>({colors:[t.attr.color1,t.attr.color2],borderWidth:Number(t.attr.borderWidth),borderGap:Number(t.attr.borderGap),lineDash:t.attr.lineDash,gapWeight:t.attr.gapWeight,textColor:t.attr.textColor,fontSize:Number(t.attr.fontSize),borderRadius:Number(t.attr.borderRadius),localGradient:!!t.attr.localGradient,formatter:t.attr.formatter})),_=o(()=>e.value.borderWidth?c.value-e.value.borderWidth:0),m=o(()=>e.value.borderWidth?i.value-e.value.borderWidth:0),z=o(()=>e.value?i.value-(e.value.borderWidth+e.value.borderGap)*2:0),S=o(()=>e.value&&e.value.localGradient?h.value:p.value),D=o(()=>{const r=i.value/2;if(!e.value)return`0, ${r} 0, ${r}`;const a=(c.value-(e.value.borderWidth+e.value.borderGap)*2)/100*v.value;return`
        ${e.value.borderWidth+e.value.borderGap}, ${r}
        ${e.value.borderWidth+e.value.borderGap+a}, ${r+.001}`}),b=o(()=>{if(!e.value.colors)return[];const a=100/(e.value.colors.length-1);return e.value.colors.map((f,l)=>[a*l,f])}),V=o(()=>e.value?"200%":"100%"),C=o(()=>e.value.formatter?e.value.formatter.replace("{value}",v.value.toString()):""),I=o(()=>({fontSize:(t.attr.fontSize||12)+"px"}));return F("actual",w),(r,a)=>{const f=H("resize");return T((s(),u("div",O,[(s(),u("svg",null,[n("defs",null,[n("linearGradient",{id:h.value,x1:"0%",y1:"0%",x2:"100%",y2:"0%"},[(s(!0),u(x,null,W(b.value,(l,g)=>(s(),u("stop",{key:g,offset:`${l[0]}%`,"stop-color":l[1]},null,8,q))),128))],8,X),n("linearGradient",{id:p.value,x1:"0%",y1:"0%",x2:V.value,y2:"0%"},[(s(!0),u(x,null,W(b.value,(l,g)=>(s(),u("stop",{key:g,offset:`${l[0]}%`,"stop-color":l[1]},null,8,K))),128))],8,A)]),n("rect",{x:e.value?e.value.borderWidth/2:"0",y:e.value?e.value.borderWidth/2:"0",rx:e.value?e.value.borderRadius:"0",ry:e.value?e.value.borderRadius:"0",fill:"transparent","stroke-width":e.value?e.value.borderWidth:"0",stroke:`url(#${h.value})`,width:_.value>0?_.value:0,height:m.value>0?m.value:0},null,8,Q),n("polyline",{"stroke-width":z.value,"stroke-dasharray":e.value?[e.value.lineDash,e.value.gapWeight].join(","):"0",stroke:`url(#${S.value})`,points:D.value},null,8,U),n("text",{style:j(I.value),stroke:e.value?e.value.textColor:"#fff",fill:e.value?e.value.textColor:"#fff",x:c.value/2,y:i.value/2},E(C.value),13,Y)]))])),[[f,N]])}}});const re=J(Z,[["__scopeId","data-v-45d01cd7"]]);export{re as default};
