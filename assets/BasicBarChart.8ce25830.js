var w=Object.defineProperty,O=Object.defineProperties;var S=Object.getOwnPropertyDescriptors;var b=Object.getOwnPropertySymbols;var _=Object.prototype.hasOwnProperty,N=Object.prototype.propertyIsEnumerable;var h=(o,t,e)=>t in o?w(o,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):o[t]=e,L=(o,t)=>{for(var e in t||(t={}))_.call(t,e)&&h(o,e,t[e]);if(b)for(var e of b(t))N.call(t,e)&&h(o,e,t[e]);return o},g=(o,t)=>O(o,S(t));var f=(o,t,e)=>new Promise((s,l)=>{var p=c=>{try{a(e.next(c))}catch(m){l(m)}},x=c=>{try{a(e.throw(c))}catch(m){l(m)}},a=c=>c.done?s(c.value):Promise.resolve(c.value).then(p,x);a((e=e.apply(o,t)).next())});import{r as k,c as A,i as B,t as D}from"./utils.4ce21b2a.js";import{h as E}from"./index.c8837098.js";import{d as M,B as T,u as z,E as V,S as F,J as R,o as H,b as I,I as J}from"./index.43eed5bc.js";import{u as P}from"./useProp.afe31ed3.js";const K=M({__name:"BasicBarChart",props:{component:null},setup(o){const t=o;k("mydark",D);const e=T(null);let s=null,l;const p=z(),x=()=>{s&&(s.clear(),c())},{propValue:a}=P(t.component,x);V(()=>f(this,null,function*(){l=d(),C(),yield c()}));const c=()=>f(this,null,function*(){try{const i=yield E.get({url:a.data.url});if(i.status===200){const r=a.data.upperLimit,n=a.data.lowerLimit,u=i.data.map(v=>A(Number(v.TagValue),r,n));y(u)}}catch(i){if(console.log((i==null?void 0:i.message)||i),p.isEditMode){const n=["\u79E6","\u9F50","\u695A","\u8D75","\u71D5","\u97E9","\u9B4F"].map(u=>({label:u,value:Math.round(Math.random()*(a.data.upperLimit||100))}));y(n)}}}),m=i=>{const r=i[0],{width:n,height:u}=r.contentRect;s==null||s.resize({width:n,height:u})},d=()=>{const i={grid:{top:"10%",left:"3%",right:"4%",bottom:"10%",containLabel:!0},tooltip:{trigger:"axis"},xAxis:{type:"category",data:[],splitLine:{show:a.axis.xshow,lineStyle:{type:a.axis.xLineType,color:a.axis.xAxisLineColor}},axisLine:{lineStyle:{color:a.axis.axisColor||"#fff"}},axisTick:{lineStyle:{color:a.axis.axisColor||"#fff"}},axisLabel:{color:a.axis.axisLabelColor||"#fff"}},yAxis:{type:"value",max:n=>(console.log(a.data.max),a.data.max==="dataMax"||!a.data.max?n.max+Number(a.data.maxOffset||0):Number(a.data.max)+Number(a.data.maxOffset||0)),min:n=>a.data.min==="dataMin"?n.min-Number(a.data.minOffset||0):a.data.min===""||a.data.min===void 0||a.data.min===null?0-Number(a.data.minOffset||0):Number(a.data.min)-Number(a.data.minOffset||0),splitLine:{show:a.axis.yshow,lineStyle:{type:a.axis.yLineType,color:a.axis.yAxisLineColor}},axisLine:{lineStyle:{color:a.axis.axisColor||"#fff"}},axisTick:{lineStyle:{color:a.axis.axisColor||"#fff"}},axisLabel:{color:a.axis.axisLabelColor||"#fff"}},series:[]};let r=[{data:[],type:"bar"}];return i.series=r,i},y=i=>{l=d(),l.series[0].data=i.map(r=>r.value),l.xAxis=g(L({},l.xAxis),{data:i.map(r=>r.label)}),s&&s.setOption(l)},C=()=>{s=B(e.value,"mydark"),s.clear(),s.setOption(l)};return F(()=>{s&&(s.clear(),s.dispose())}),(i,r)=>{const n=J("resize");return R((H(),I("div",{ref_key:"chartEl",ref:e},null,512)),[[n,m]])}}});export{K as default};
