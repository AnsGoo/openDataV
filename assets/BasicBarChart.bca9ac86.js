var C=Object.defineProperty,w=Object.defineProperties;var _=Object.getOwnPropertyDescriptors;var h=Object.getOwnPropertySymbols;var E=Object.prototype.hasOwnProperty,N=Object.prototype.propertyIsEnumerable;var L=(s,t,e)=>t in s?C(s,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):s[t]=e,g=(s,t)=>{for(var e in t||(t={}))E.call(t,e)&&L(s,e,t[e]);if(h)for(var e of h(t))N.call(t,e)&&L(s,e,t[e]);return s},v=(s,t)=>w(s,_(t));var x=(s,t,e)=>new Promise((o,c)=>{var p=a=>{try{u(e.next(a))}catch(n){c(n)}},m=a=>{try{u(e.throw(a))}catch(n){c(n)}},u=a=>a.done?o(a.value):Promise.resolve(a.value).then(p,m);u((e=e.apply(s,t)).next())});import{h as O}from"./index.52bc8a7a.js";import{d as S,r as A,q as D,a as B,w as M,u as k,o as T,c as z,f as V}from"./index.f45a3cae.js";import{u as F}from"./useProp.afe31ed3.js";import{c as q}from"./utils.fc532f69.js";import{u as H}from"./hooks.8d299b8d.js";import"./theme.31b3b9c9.js";const K=S({__name:"BasicBarChart",props:{component:null},setup(s){const t=s,e=A(null);let o;const c=D(),p=()=>{n()},{updateEchart:m,resizeHandler:u}=H(e),{propValue:a}=F(t.component,p);B(()=>x(this,null,function*(){o=d(),m(o),yield n()}));const n=()=>x(this,null,function*(){try{const i=yield O.get({url:a.data.url});if(i.status===200){const r=a.data.upperLimit,l=a.data.lowerLimit,f=i.data.map(y=>({value:q(Number(y.value),r,l),label:y.label}));b(f)}}catch(i){if(console.log((i==null?void 0:i.message)||i),c.isEditMode){const l=["\u79E6","\u9F50","\u695A","\u8D75","\u71D5","\u97E9","\u9B4F"].map(f=>({label:f,value:Math.round(Math.random()*(a.data.upperLimit||100))}));b(l)}}}),d=()=>{const i={grid:{top:"10%",left:"3%",right:"4%",bottom:"10%",containLabel:!0},tooltip:{trigger:"axis"},xAxis:{type:"category",data:[],splitLine:{show:a.axis.xshow,lineStyle:{type:a.axis.xLineType,color:a.axis.xAxisLineColor}},axisLine:{lineStyle:{color:a.axis.axisColor||"#fff"}},axisTick:{lineStyle:{color:a.axis.axisColor||"#fff"}},axisLabel:{color:a.axis.axisLabelColor||"#fff"}},yAxis:{type:"value",max:l=>a.data.max==="dataMax"||!a.data.max?l.max+Number(a.data.maxOffset||0):Number(a.data.max)+Number(a.data.maxOffset||0),min:l=>a.data.min==="dataMin"?l.min-Number(a.data.minOffset||0):a.data.min===""||a.data.min===void 0||a.data.min===null?0-Number(a.data.minOffset||0):Number(a.data.min)-Number(a.data.minOffset||0),splitLine:{show:a.axis.yshow,lineStyle:{type:a.axis.yLineType,color:a.axis.yAxisLineColor}},axisLine:{lineStyle:{color:a.axis.axisColor||"#fff"}},axisTick:{lineStyle:{color:a.axis.axisColor||"#fff"}},axisLabel:{color:a.axis.axisLabelColor||"#fff"}},series:[]};let r=[{data:[],type:"bar"}];return i.series=r,i},b=i=>{o=d(),o.series[0].data=i.map(r=>r.value),o.xAxis=v(g({},o.xAxis),{data:i.map(r=>r.label)}),m(o)};return(i,r)=>{const l=V("resize");return M((T(),z("div",{ref_key:"chartEl",ref:e},null,512)),[[l,k(u)]])}}});export{K as default};
