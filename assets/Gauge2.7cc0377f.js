import{r as b,h as g}from"./echarts.4f9736bc.js";import{b as x}from"./@vueuse.fe63d129.js";import{h as j}from"./index.59b178ec.js";import{u as N,b as C}from"./index.2fc0df38.js";import{t as w}from"./mydark.8efe4250.js";import{d as S}from"./lodash-es.4775bb8f.js";import{p as k,r as c,q as L,w as z,c as y,o as A,y as O,x as T}from"./@vue.7df1a0ef.js";import"./zrender.706c9170.js";import"./tslib.34a40861.js";import"./axios.19d3e859.js";import"./vue-router.e129948e.js";import"./pinia.685e9614.js";import"./vue-demi.b3a9cad9.js";import"./mitt.550594b0.js";import"./element-plus.54ccd689.js";import"./lodash.8679a684.js";import"./nprogress.5f640c6a.js";import"./async-validator.5d25c98b.js";import"./@popperjs.a8a4a6a0.js";import"./resize-observer-polyfill.8deb1e21.js";import"./dexie.c25c286a.js";import"./@icon-park.87123711.js";const te=k({props:{element:null,propValue:null},setup(m){const e=m;b("mydark",w);const d=N(),n=c(null);let a=null;const i=c(0);L(()=>{h(),V()}),x(n,o=>{const l=o[0],{width:r,height:p}=l.contentRect;a==null||a.resize({width:r,height:p})});const s=()=>{const o={series:[{type:"gauge",min:e.propValue.minValue,max:e.propValue.maxValue,splitNumber:t.value.splitNumber,axisLine:{lineStyle:{width:t.value.axisLine.width,color:t.value.axisLine.color}},pointer:{icon:t.value.pointer.icon,showAbove:!1,length:t.value.pointer.length,width:t.value.pointer.width,offsetCenter:t.value.pointer.offsetCenter,itemStyle:{color:t.value.pointer.color||"inherit"}},axisTick:{length:t.value.axisTick.length,lineStyle:{color:t.value.axisTick.color||"inherit",width:t.value.axisTick.width}},splitLine:{length:t.value.splitLine.length,lineStyle:{color:t.value.splitLine.color||"inherit",width:t.value.splitLine.width}},axisLabel:{show:t.value.axisLabel.show,color:t.value.axisLabel.color||"inherit",fontSize:t.value.axisLabel.fontSize,distance:t.value.axisLabel.distance},title:{offsetCenter:t.value.title.offsetCenter,fontSize:t.value.title.fontSize,color:t.value.title.color},detail:{fontSize:t.value.detail.fontSize,offsetCenter:t.value.detail.offsetCenter,valueAnimation:!0,formatter:function(l){return l+t.value.detail.unit},color:t.value.detail.color||"auto"},data:[{value:i.value,name:e.propValue.title}]}]};return t.value.startAngle!==t.value.endAngle&&(o.series[0].startAngle=t.value.startAngle,o.series[0].endAngle=t.value.endAngle),o},f=o=>{const l=o;e.propValue.datatag===l.TagName&&(i.value=Number(l.TagValue),u())},u=S(()=>{const o=s();o.series[0].data[0].value=i.value,a&&a.setOption({series:o.series})},300),h=()=>{j.post({url:e.propValue.history,data:[e.propValue.datatag]}).then(o=>{o.ErrorCode===200&&(i.value=Number(o.Results[0].TagValue))}).catch(o=>{console.log(o);const l=e.propValue.maxValue;d.isEditMode&&(i.value=Math.round(Math.random()*l))}).finally(()=>{u()})},V=()=>{a=g(n.value,"mydark"),a.clear(),a.setOption(s())};z(()=>e.propValue,(o,l)=>{console.log(o),a&&(a.clear(),a.setOption(s()))},{deep:!0});const t=y(()=>({startAngle:Number(e.propValue.startAngle),endAngle:Number(e.propValue.endAngle),minValue:Number(e.propValue.minValue),maxValue:Number(e.propValue.maxValue),splitNumber:Number(e.propValue.splitNumber),axisLine:{width:Number(e.propValue.axisWidth),color:v()},pointer:{width:Number(e.propValue.pointerWidth),color:e.propValue.pointerColor,length:e.propValue.pointerLength,offsetCenter:e.propValue.pointerOffset.split(","),icon:e.propValue.pointStyle},axisLabel:{show:e.propValue.tickShow,color:e.propValue.tickFontColor,fontSize:Number(e.propValue.tickFontSize),distance:Number(e.propValue.tickDistance)},title:{offsetCenter:e.propValue.titleOffset.split(","),fontSize:Number(e.propValue.titleFontSize),color:e.propValue.titleColor},detail:{fontSize:Number(e.propValue.detailFontSize),offsetCenter:e.propValue.detailOffset.split(","),color:e.propValue.detailFontColor,unit:e.propValue.unit},splitLine:{length:Number(e.propValue.splitLength),color:e.propValue.splitColor,width:Number(e.propValue.splitWidth)},axisTick:{length:Number(e.propValue.tickLength),color:e.propValue.tickColor,width:Number(e.propValue.tickWidth)}})),v=()=>e.propValue.axisColor.split(";").map(o=>{const l=o.split(",");return[Number(l[0]),l[1]]});return C("actual",f),A(()=>{a&&(a.clear(),a.dispose())}),(o,l)=>(T(),O("div",{ref:(r,p)=>{p.chartEl=r,n.value=r}},null,512))}});export{te as default};
