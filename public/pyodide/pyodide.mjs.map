{"version":3,"file":"pyodide.mjs","sources":["../src/js/node_modules/tslib/tslib.es6.js","../src/js/node_modules/error-stack-parser/error-stack-parser.js","../src/js/node_modules/stackframe/stackframe.js","../src/js/module.ts","../src/js/compat.ts","../src/js/pyproxy.gen.ts","../src/js/load-package.ts","../src/js/error_handling.gen.ts","../src/js/api.ts","../src/js/pyodide.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n","(function(root, factory) {\n    'use strict';\n    // Universal Module Definition (UMD) to support AMD, CommonJS/Node.js, Rhino, and browsers.\n\n    /* istanbul ignore next */\n    if (typeof define === 'function' && define.amd) {\n        define('error-stack-parser', ['stackframe'], factory);\n    } else if (typeof exports === 'object') {\n        module.exports = factory(require('stackframe'));\n    } else {\n        root.ErrorStackParser = factory(root.StackFrame);\n    }\n}(this, function ErrorStackParser(StackFrame) {\n    'use strict';\n\n    var FIREFOX_SAFARI_STACK_REGEXP = /(^|@)\\S+:\\d+/;\n    var CHROME_IE_STACK_REGEXP = /^\\s*at .*(\\S+:\\d+|\\(native\\))/m;\n    var SAFARI_NATIVE_CODE_REGEXP = /^(eval@)?(\\[native code])?$/;\n\n    return {\n        /**\n         * Given an Error object, extract the most information from it.\n         *\n         * @param {Error} error object\n         * @return {Array} of StackFrames\n         */\n        parse: function ErrorStackParser$$parse(error) {\n            if (typeof error.stacktrace !== 'undefined' || typeof error['opera#sourceloc'] !== 'undefined') {\n                return this.parseOpera(error);\n            } else if (error.stack && error.stack.match(CHROME_IE_STACK_REGEXP)) {\n                return this.parseV8OrIE(error);\n            } else if (error.stack) {\n                return this.parseFFOrSafari(error);\n            } else {\n                throw new Error('Cannot parse given Error object');\n            }\n        },\n\n        // Separate line and column numbers from a string of the form: (URI:Line:Column)\n        extractLocation: function ErrorStackParser$$extractLocation(urlLike) {\n            // Fail-fast but return locations like \"(native)\"\n            if (urlLike.indexOf(':') === -1) {\n                return [urlLike];\n            }\n\n            var regExp = /(.+?)(?::(\\d+))?(?::(\\d+))?$/;\n            var parts = regExp.exec(urlLike.replace(/[()]/g, ''));\n            return [parts[1], parts[2] || undefined, parts[3] || undefined];\n        },\n\n        parseV8OrIE: function ErrorStackParser$$parseV8OrIE(error) {\n            var filtered = error.stack.split('\\n').filter(function(line) {\n                return !!line.match(CHROME_IE_STACK_REGEXP);\n            }, this);\n\n            return filtered.map(function(line) {\n                if (line.indexOf('(eval ') > -1) {\n                    // Throw away eval information until we implement stacktrace.js/stackframe#8\n                    line = line.replace(/eval code/g, 'eval').replace(/(\\(eval at [^()]*)|(\\),.*$)/g, '');\n                }\n                var sanitizedLine = line.replace(/^\\s+/, '').replace(/\\(eval code/g, '(');\n\n                // capture and preseve the parenthesized location \"(/foo/my bar.js:12:87)\" in\n                // case it has spaces in it, as the string is split on \\s+ later on\n                var location = sanitizedLine.match(/ (\\((.+):(\\d+):(\\d+)\\)$)/);\n\n                // remove the parenthesized location from the line, if it was matched\n                sanitizedLine = location ? sanitizedLine.replace(location[0], '') : sanitizedLine;\n\n                var tokens = sanitizedLine.split(/\\s+/).slice(1);\n                // if a location was matched, pass it to extractLocation() otherwise pop the last token\n                var locationParts = this.extractLocation(location ? location[1] : tokens.pop());\n                var functionName = tokens.join(' ') || undefined;\n                var fileName = ['eval', '<anonymous>'].indexOf(locationParts[0]) > -1 ? undefined : locationParts[0];\n\n                return new StackFrame({\n                    functionName: functionName,\n                    fileName: fileName,\n                    lineNumber: locationParts[1],\n                    columnNumber: locationParts[2],\n                    source: line\n                });\n            }, this);\n        },\n\n        parseFFOrSafari: function ErrorStackParser$$parseFFOrSafari(error) {\n            var filtered = error.stack.split('\\n').filter(function(line) {\n                return !line.match(SAFARI_NATIVE_CODE_REGEXP);\n            }, this);\n\n            return filtered.map(function(line) {\n                // Throw away eval information until we implement stacktrace.js/stackframe#8\n                if (line.indexOf(' > eval') > -1) {\n                    line = line.replace(/ line (\\d+)(?: > eval line \\d+)* > eval:\\d+:\\d+/g, ':$1');\n                }\n\n                if (line.indexOf('@') === -1 && line.indexOf(':') === -1) {\n                    // Safari eval frames only have function names and nothing else\n                    return new StackFrame({\n                        functionName: line\n                    });\n                } else {\n                    var functionNameRegex = /((.*\".+\"[^@]*)?[^@]*)(?:@)/;\n                    var matches = line.match(functionNameRegex);\n                    var functionName = matches && matches[1] ? matches[1] : undefined;\n                    var locationParts = this.extractLocation(line.replace(functionNameRegex, ''));\n\n                    return new StackFrame({\n                        functionName: functionName,\n                        fileName: locationParts[0],\n                        lineNumber: locationParts[1],\n                        columnNumber: locationParts[2],\n                        source: line\n                    });\n                }\n            }, this);\n        },\n\n        parseOpera: function ErrorStackParser$$parseOpera(e) {\n            if (!e.stacktrace || (e.message.indexOf('\\n') > -1 &&\n                e.message.split('\\n').length > e.stacktrace.split('\\n').length)) {\n                return this.parseOpera9(e);\n            } else if (!e.stack) {\n                return this.parseOpera10(e);\n            } else {\n                return this.parseOpera11(e);\n            }\n        },\n\n        parseOpera9: function ErrorStackParser$$parseOpera9(e) {\n            var lineRE = /Line (\\d+).*script (?:in )?(\\S+)/i;\n            var lines = e.message.split('\\n');\n            var result = [];\n\n            for (var i = 2, len = lines.length; i < len; i += 2) {\n                var match = lineRE.exec(lines[i]);\n                if (match) {\n                    result.push(new StackFrame({\n                        fileName: match[2],\n                        lineNumber: match[1],\n                        source: lines[i]\n                    }));\n                }\n            }\n\n            return result;\n        },\n\n        parseOpera10: function ErrorStackParser$$parseOpera10(e) {\n            var lineRE = /Line (\\d+).*script (?:in )?(\\S+)(?:: In function (\\S+))?$/i;\n            var lines = e.stacktrace.split('\\n');\n            var result = [];\n\n            for (var i = 0, len = lines.length; i < len; i += 2) {\n                var match = lineRE.exec(lines[i]);\n                if (match) {\n                    result.push(\n                        new StackFrame({\n                            functionName: match[3] || undefined,\n                            fileName: match[2],\n                            lineNumber: match[1],\n                            source: lines[i]\n                        })\n                    );\n                }\n            }\n\n            return result;\n        },\n\n        // Opera 10.65+ Error.stack very similar to FF/Safari\n        parseOpera11: function ErrorStackParser$$parseOpera11(error) {\n            var filtered = error.stack.split('\\n').filter(function(line) {\n                return !!line.match(FIREFOX_SAFARI_STACK_REGEXP) && !line.match(/^Error created at/);\n            }, this);\n\n            return filtered.map(function(line) {\n                var tokens = line.split('@');\n                var locationParts = this.extractLocation(tokens.pop());\n                var functionCall = (tokens.shift() || '');\n                var functionName = functionCall\n                    .replace(/<anonymous function(: (\\w+))?>/, '$2')\n                    .replace(/\\([^)]*\\)/g, '') || undefined;\n                var argsRaw;\n                if (functionCall.match(/\\(([^)]*)\\)/)) {\n                    argsRaw = functionCall.replace(/^[^(]+\\(([^)]*)\\)$/, '$1');\n                }\n                var args = (argsRaw === undefined || argsRaw === '[arguments not available]') ?\n                    undefined : argsRaw.split(',');\n\n                return new StackFrame({\n                    functionName: functionName,\n                    args: args,\n                    fileName: locationParts[0],\n                    lineNumber: locationParts[1],\n                    columnNumber: locationParts[2],\n                    source: line\n                });\n            }, this);\n        }\n    };\n}));\n","(function(root, factory) {\n    'use strict';\n    // Universal Module Definition (UMD) to support AMD, CommonJS/Node.js, Rhino, and browsers.\n\n    /* istanbul ignore next */\n    if (typeof define === 'function' && define.amd) {\n        define('stackframe', [], factory);\n    } else if (typeof exports === 'object') {\n        module.exports = factory();\n    } else {\n        root.StackFrame = factory();\n    }\n}(this, function() {\n    'use strict';\n    function _isNumber(n) {\n        return !isNaN(parseFloat(n)) && isFinite(n);\n    }\n\n    function _capitalize(str) {\n        return str.charAt(0).toUpperCase() + str.substring(1);\n    }\n\n    function _getter(p) {\n        return function() {\n            return this[p];\n        };\n    }\n\n    var booleanProps = ['isConstructor', 'isEval', 'isNative', 'isToplevel'];\n    var numericProps = ['columnNumber', 'lineNumber'];\n    var stringProps = ['fileName', 'functionName', 'source'];\n    var arrayProps = ['args'];\n    var objectProps = ['evalOrigin'];\n\n    var props = booleanProps.concat(numericProps, stringProps, arrayProps, objectProps);\n\n    function StackFrame(obj) {\n        if (!obj) return;\n        for (var i = 0; i < props.length; i++) {\n            if (obj[props[i]] !== undefined) {\n                this['set' + _capitalize(props[i])](obj[props[i]]);\n            }\n        }\n    }\n\n    StackFrame.prototype = {\n        getArgs: function() {\n            return this.args;\n        },\n        setArgs: function(v) {\n            if (Object.prototype.toString.call(v) !== '[object Array]') {\n                throw new TypeError('Args must be an Array');\n            }\n            this.args = v;\n        },\n\n        getEvalOrigin: function() {\n            return this.evalOrigin;\n        },\n        setEvalOrigin: function(v) {\n            if (v instanceof StackFrame) {\n                this.evalOrigin = v;\n            } else if (v instanceof Object) {\n                this.evalOrigin = new StackFrame(v);\n            } else {\n                throw new TypeError('Eval Origin must be an Object or StackFrame');\n            }\n        },\n\n        toString: function() {\n            var fileName = this.getFileName() || '';\n            var lineNumber = this.getLineNumber() || '';\n            var columnNumber = this.getColumnNumber() || '';\n            var functionName = this.getFunctionName() || '';\n            if (this.getIsEval()) {\n                if (fileName) {\n                    return '[eval] (' + fileName + ':' + lineNumber + ':' + columnNumber + ')';\n                }\n                return '[eval]:' + lineNumber + ':' + columnNumber;\n            }\n            if (functionName) {\n                return functionName + ' (' + fileName + ':' + lineNumber + ':' + columnNumber + ')';\n            }\n            return fileName + ':' + lineNumber + ':' + columnNumber;\n        }\n    };\n\n    StackFrame.fromString = function StackFrame$$fromString(str) {\n        var argsStartIndex = str.indexOf('(');\n        var argsEndIndex = str.lastIndexOf(')');\n\n        var functionName = str.substring(0, argsStartIndex);\n        var args = str.substring(argsStartIndex + 1, argsEndIndex).split(',');\n        var locationString = str.substring(argsEndIndex + 1);\n\n        if (locationString.indexOf('@') === 0) {\n            var parts = /@(.+?)(?::(\\d+))?(?::(\\d+))?$/.exec(locationString, '');\n            var fileName = parts[1];\n            var lineNumber = parts[2];\n            var columnNumber = parts[3];\n        }\n\n        return new StackFrame({\n            functionName: functionName,\n            args: args || undefined,\n            fileName: fileName,\n            lineNumber: lineNumber || undefined,\n            columnNumber: columnNumber || undefined\n        });\n    };\n\n    for (var i = 0; i < booleanProps.length; i++) {\n        StackFrame.prototype['get' + _capitalize(booleanProps[i])] = _getter(booleanProps[i]);\n        StackFrame.prototype['set' + _capitalize(booleanProps[i])] = (function(p) {\n            return function(v) {\n                this[p] = Boolean(v);\n            };\n        })(booleanProps[i]);\n    }\n\n    for (var j = 0; j < numericProps.length; j++) {\n        StackFrame.prototype['get' + _capitalize(numericProps[j])] = _getter(numericProps[j]);\n        StackFrame.prototype['set' + _capitalize(numericProps[j])] = (function(p) {\n            return function(v) {\n                if (!_isNumber(v)) {\n                    throw new TypeError(p + ' must be a Number');\n                }\n                this[p] = Number(v);\n            };\n        })(numericProps[j]);\n    }\n\n    for (var k = 0; k < stringProps.length; k++) {\n        StackFrame.prototype['get' + _capitalize(stringProps[k])] = _getter(stringProps[k]);\n        StackFrame.prototype['set' + _capitalize(stringProps[k])] = (function(p) {\n            return function(v) {\n                this[p] = String(v);\n            };\n        })(stringProps[k]);\n    }\n\n    return StackFrame;\n}));\n","/**\n * The Emscripten Module.\n *\n * @private\n */\nexport let Module: any = {};\nModule.noImageDecoding = true;\nModule.noAudioDecoding = true;\nModule.noWasmDecoding = false; // we preload wasm using the built in plugin now\nModule.preloadedWasm = {};\nModule.preRun = [];\n\nexport let API: any = {};\nModule.API = API;\nexport let Hiwire: any = {};\nModule.hiwire = Hiwire;\n\n// Put things that are exposed only for testing purposes here.\nexport let Tests: any = {};\nAPI.tests = Tests;\n\n/**\n *\n * @param stdin\n * @param stdout\n * @param stderr\n * @private\n */\nexport function setStandardStreams(\n  stdin?: () => string,\n  stdout?: (a: string) => void,\n  stderr?: (a: string) => void\n) {\n  // For stdout and stderr, emscripten provides convenient wrappers that save us the trouble of converting the bytes into a string\n  if (stdout) {\n    Module.print = stdout;\n  }\n\n  if (stderr) {\n    Module.printErr = stderr;\n  }\n\n  // For stdin, we have to deal with the low level API ourselves\n  if (stdin) {\n    Module.preRun.push(function () {\n      Module.FS.init(createStdinWrapper(stdin), null, null);\n    });\n  }\n}\n\nfunction createStdinWrapper(stdin: () => string) {\n  // When called, it asks the user for one whole line of input (stdin)\n  // Then, it passes the individual bytes of the input to emscripten, one after another.\n  // And finally, it terminates it with null.\n  const encoder = new TextEncoder();\n  let input = new Uint8Array(0);\n  let inputIndex = -1; // -1 means that we just returned null\n  function stdinWrapper() {\n    try {\n      if (inputIndex === -1) {\n        let text = stdin();\n        if (text === undefined || text === null) {\n          return null;\n        }\n        if (typeof text !== \"string\") {\n          throw new TypeError(\n            `Expected stdin to return string, null, or undefined, got type ${typeof text}.`\n          );\n        }\n        if (!text.endsWith(\"\\n\")) {\n          text += \"\\n\";\n        }\n        input = encoder.encode(text);\n        inputIndex = 0;\n      }\n\n      if (inputIndex < input.length) {\n        let character = input[inputIndex];\n        inputIndex++;\n        return character;\n      } else {\n        inputIndex = -1;\n        return null;\n      }\n    } catch (e) {\n      // emscripten will catch this and set an IOError which is unhelpful for\n      // debugging.\n      console.error(\"Error thrown in stdin:\");\n      console.error(e);\n      throw e;\n    }\n  }\n  return stdinWrapper;\n}\n\n/**\n * Make the home directory inside the virtual file system,\n * then change the working directory to it.\n *\n * @param path\n * @private\n */\nexport function setHomeDirectory(path: string) {\n  Module.preRun.push(function () {\n    const fallbackPath = \"/\";\n    try {\n      Module.FS.mkdirTree(path);\n    } catch (e) {\n      console.error(`Error occurred while making a home directory '${path}':`);\n      console.error(e);\n      console.error(`Using '${fallbackPath}' for a home directory instead`);\n      path = fallbackPath;\n    }\n    Module.ENV.HOME = path;\n    Module.FS.chdir(path);\n  });\n}\n","// Detect if we're in node\ndeclare var process: any;\n\nexport const IN_NODE =\n  typeof process !== \"undefined\" &&\n  process.release &&\n  process.release.name === \"node\" &&\n  typeof process.browser ===\n    \"undefined\"; /* This last condition checks if we run the browser shim of process */\n\nlet nodePathMod: any;\nlet nodeFetch: any;\nlet nodeVmMod: any;\n/** @private */\nexport let nodeFsPromisesMod: any;\n\ndeclare var globalThis: {\n  importScripts: (url: string) => void;\n  document?: any;\n};\n\n/**\n * If we're in node, it's most convenient to import various node modules on\n * initialization. Otherwise, this does nothing.\n * @private\n */\nexport async function initNodeModules() {\n  if (!IN_NODE) {\n    return;\n  }\n  // @ts-ignore\n  nodePathMod = (await import(/* webpackIgnore: true */ \"path\")).default;\n  nodeFsPromisesMod = await import(/* webpackIgnore: true */ \"fs/promises\");\n  // @ts-ignore\n  nodeFetch = (await import(/* webpackIgnore: true */ \"node-fetch\")).default;\n  // @ts-ignore\n  nodeVmMod = (await import(/* webpackIgnore: true */ \"vm\")).default;\n}\n\n/**\n * Load a binary file, only for use in Node. If the path explicitly is a URL,\n * then fetch from a URL, else load from the file system.\n * @param indexURL base path to resolve relative paths\n * @param path the path to load\n * @returns An ArrayBuffer containing the binary data\n * @private\n */\nasync function node_loadBinaryFile(\n  indexURL: string,\n  path: string\n): Promise<Uint8Array> {\n  if (path.includes(\"://\")) {\n    let response = await nodeFetch(path);\n    if (!response.ok) {\n      throw new Error(`Failed to load '${path}': request failed.`);\n    }\n    return await response.arrayBuffer();\n  } else {\n    const data = await nodeFsPromisesMod.readFile(`${indexURL}${path}`);\n    return new Uint8Array(data.buffer, data.byteOffset, data.byteLength);\n  }\n}\n\n/**\n * Load a binary file, only for use in browser. Resolves relative paths against\n * indexURL.\n *\n * @param indexURL base path to resolve relative paths\n * @param path the path to load\n * @returns A Uint8Array containing the binary data\n * @private\n */\nasync function browser_loadBinaryFile(\n  indexURL: string,\n  path: string\n): Promise<Uint8Array> {\n  // @ts-ignore\n  const base = new URL(indexURL, location);\n  const url = new URL(path, base);\n  // @ts-ignore\n  let response = await fetch(url);\n  if (!response.ok) {\n    throw new Error(`Failed to load '${url}': request failed.`);\n  }\n  return new Uint8Array(await response.arrayBuffer());\n}\n\n/** @private */\nexport let _loadBinaryFile: (\n  indexURL: string,\n  path: string\n) => Promise<Uint8Array>;\nif (IN_NODE) {\n  _loadBinaryFile = node_loadBinaryFile;\n} else {\n  _loadBinaryFile = browser_loadBinaryFile;\n}\n\n/**\n * Currently loadScript is only used once to load `pyodide.asm.js`.\n * @param url\n * @async\n * @private\n */\nexport let loadScript: (url: string) => Promise<void>;\n\nif (globalThis.document) {\n  // browser\n  loadScript = async (url) => await import(/* webpackIgnore: true */ url);\n} else if (globalThis.importScripts) {\n  // webworker\n  loadScript = async (url) => {\n    // This is async only for consistency\n    try {\n      // use importScripts in classic web worker\n      globalThis.importScripts(url);\n    } catch (e) {\n      // importScripts throws TypeError in a module type web worker, use import instead\n      if (e instanceof TypeError) {\n        await import(url);\n      } else {\n        throw e;\n      }\n    }\n  };\n} else if (IN_NODE) {\n  loadScript = nodeLoadScript;\n} else {\n  throw new Error(\"Cannot determine runtime environment\");\n}\n\n/**\n * Load a text file and executes it as Javascript\n * @param url The path to load. May be a url or a relative file system path.\n * @private\n */\nasync function nodeLoadScript(url: string) {\n  if (url.includes(\"://\")) {\n    // If it's a url, load it with fetch then eval it.\n    nodeVmMod.runInThisContext(await (await nodeFetch(url)).text());\n  } else {\n    // Otherwise, hopefully it is a relative path we can load from the file\n    // system.\n    await import(nodePathMod.resolve(url));\n  }\n}\n","// This file is generated by applying the C preprocessor to core/pyproxy.ts\n// It uses the macros defined in core/pyproxy.c\n// Do not edit it directly!\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * Every public Python entrypoint goes through this file! The main entrypoint is\n * the callPyObject method, but of course one can also execute arbitrary code\n * via the various __dundermethods__ associated to classes.\n *\n * Any time we call into wasm, the call should be wrapped in a try catch block.\n * This way if a JavaScript error emerges from the wasm, we can escalate it to a\n * fatal error.\n *\n * This is file is preprocessed with -imacros \"pyproxy.c\". As a result of this,\n * any macros available in pyproxy.c are available here. We only need the flags\n * macros HAS_LENGTH, etc.\n *\n * See Makefile recipe for src/js/pyproxy.gen.ts\n */\nimport { Module, API, Hiwire } from \"./module.js\";\n/**\n * Is the argument a :any:`PyProxy`?\n * @param jsobj Object to test.\n * @returns Is ``jsobj`` a :any:`PyProxy`?\n */\nexport function isPyProxy(jsobj: any): jsobj is PyProxy {\n  return !!jsobj && jsobj.$$ !== undefined && jsobj.$$.type === \"PyProxy\";\n}\nAPI.isPyProxy = isPyProxy;\ndeclare var FinalizationRegistry: any;\ndeclare var globalThis: any;\nif (globalThis.FinalizationRegistry) {\n  Module.finalizationRegistry = new FinalizationRegistry(\n    ([ptr, cache]: [ptr: number, cache: PyProxyCache]) => {\n      cache.leaked = (!!1);\n      pyproxy_decref_cache(cache);\n      try {\n        Module._Py_DecRef(ptr);\n      } catch (e) {\n        // I'm not really sure what happens if an error occurs inside of a\n        // finalizer...\n        API.fatal_error(e);\n      }\n    }\n  );\n  // For some unclear reason this code screws up selenium FirefoxDriver. Works\n  // fine in chrome and when I test it in browser. It seems to be sensitive to\n  // changes that don't make a difference to the semantics.\n  // TODO: after 0.18.0, fix selenium issues with this code.\n  // Module.bufferFinalizationRegistry = new FinalizationRegistry((ptr) => {\n  //   try {\n  //     Module._PyBuffer_Release(ptr);\n  //     Module._PyMem_Free(ptr);\n  //   } catch (e) {\n  //     API.fatal_error(e);\n  //   }\n  // });\n} else {\n  Module.finalizationRegistry = { register() {}, unregister() {} };\n  // Module.bufferFinalizationRegistry = finalizationRegistry;\n}\nlet pyproxy_alloc_map = new Map();\nModule.pyproxy_alloc_map = pyproxy_alloc_map;\nlet trace_pyproxy_alloc: (proxy: any) => void;\nlet trace_pyproxy_dealloc: (proxy: any) => void;\nModule.enable_pyproxy_allocation_tracing = function () {\n  trace_pyproxy_alloc = function (proxy: any) {\n    pyproxy_alloc_map.set(proxy, Error().stack);\n  };\n  trace_pyproxy_dealloc = function (proxy: any) {\n    pyproxy_alloc_map.delete(proxy);\n  };\n};\nModule.disable_pyproxy_allocation_tracing = function () {\n  trace_pyproxy_alloc = function (proxy: any) {};\n  trace_pyproxy_dealloc = function (proxy: any) {};\n};\nModule.disable_pyproxy_allocation_tracing();\ntype PyProxyCache = { cacheId: number; refcnt: number; leaked?: boolean };\n/**\n * Create a new PyProxy wrapping ptrobj which is a PyObject*.\n *\n * The argument cache is only needed to implement the PyProxy.copy API, it\n * allows the copy of the PyProxy to share its attribute cache with the original\n * version. In all other cases, pyproxy_new should be called with one argument.\n *\n * In the case that the Python object is callable, PyProxyClass inherits from\n * Function so that PyProxy objects can be callable. In that case we MUST expose\n * certain properties inherited from Function, but we do our best to remove as\n * many as possible.\n * @private\n */\nModule.pyproxy_new = function (ptrobj: number, cache?: PyProxyCache) {\n  let flags = Module._pyproxy_getflags(ptrobj);\n  let cls = Module.getPyProxyClass(flags);\n  // Reflect.construct calls the constructor of Module.PyProxyClass but sets\n  // the prototype as cls.prototype. This gives us a way to dynamically create\n  // subclasses of PyProxyClass (as long as we don't need to use the \"new\n  // cls(ptrobj)\" syntax).\n  let target;\n  if (flags & (1 << 8)) {\n    // To make a callable proxy, we must call the Function constructor.\n    // In this case we are effectively subclassing Function.\n    target = Reflect.construct(Function, [], cls);\n    // Remove undesirable properties added by Function constructor. Note: we\n    // can't remove \"arguments\" or \"caller\" because they are not configurable\n    // and not writable\n    delete target.length;\n    delete target.name;\n    // prototype isn't configurable so we can't delete it but it's writable.\n    target.prototype = undefined;\n  } else {\n    target = Object.create(cls.prototype);\n  }\n  if (!cache) {\n    // The cache needs to be accessed primarily from the C function\n    // _pyproxy_getattr so we make a hiwire id.\n    let cacheId = Hiwire.new_value(new Map());\n    cache = { cacheId, refcnt: 0 };\n  }\n  cache.refcnt++;\n  Object.defineProperty(target, \"$$\", {\n    value: { ptr: ptrobj, type: \"PyProxy\", cache },\n  });\n  Module._Py_IncRef(ptrobj);\n  let proxy = new Proxy(target, PyProxyHandlers);\n  trace_pyproxy_alloc(proxy);\n  Module.finalizationRegistry.register(proxy, [ptrobj, cache], proxy);\n  return proxy;\n};\nfunction _getPtr(jsobj: any) {\n  let ptr: number = jsobj.$$.ptr;\n  if (ptr === 0) {\n    throw new Error(jsobj.$$.destroyed_msg);\n  }\n  return ptr;\n}\nlet pyproxyClassMap = new Map();\n/**\n * Retrieve the appropriate mixins based on the features requested in flags.\n * Used by pyproxy_new. The \"flags\" variable is produced by the C function\n * pyproxy_getflags. Multiple PyProxies with the same set of feature flags\n * will share the same prototype, so the memory footprint of each individual\n * PyProxy is minimal.\n * @private\n */\nModule.getPyProxyClass = function (flags: number) {\n  const FLAG_TYPE_PAIRS: [number, any][] = [\n    [(1 << 0), PyProxyLengthMethods],\n    [(1 << 1), PyProxyGetItemMethods],\n    [(1 << 2), PyProxySetItemMethods],\n    [(1 << 3), PyProxyContainsMethods],\n    [(1 << 4), PyProxyIterableMethods],\n    [(1 << 5), PyProxyIteratorMethods],\n    [(1 << 6), PyProxyAwaitableMethods],\n    [(1 << 7), PyProxyBufferMethods],\n    [(1 << 8), PyProxyCallableMethods],\n  ];\n  let result = pyproxyClassMap.get(flags);\n  if (result) {\n    return result;\n  }\n  let descriptors: any = {};\n  for (let [feature_flag, methods] of FLAG_TYPE_PAIRS) {\n    if (flags & feature_flag) {\n      Object.assign(\n        descriptors,\n        Object.getOwnPropertyDescriptors(methods.prototype)\n      );\n    }\n  }\n  // Use base constructor (just throws an error if construction is attempted).\n  descriptors.constructor = Object.getOwnPropertyDescriptor(\n    PyProxyClass.prototype,\n    \"constructor\"\n  );\n  Object.assign(\n    descriptors,\n    Object.getOwnPropertyDescriptors({ $$flags: flags })\n  );\n  let new_proto = Object.create(PyProxyClass.prototype, descriptors);\n  function NewPyProxyClass() {}\n  NewPyProxyClass.prototype = new_proto;\n  pyproxyClassMap.set(flags, NewPyProxyClass);\n  return NewPyProxyClass;\n};\n// Static methods\nModule.PyProxy_getPtr = _getPtr;\nconst pyproxy_cache_destroyed_msg =\n  \"This borrowed attribute proxy was automatically destroyed in the \" +\n  \"process of destroying the proxy it was borrowed from. Try using the 'copy' method.\";\nfunction pyproxy_decref_cache(cache: PyProxyCache) {\n  if (!cache) {\n    return;\n  }\n  cache.refcnt--;\n  if (cache.refcnt === 0) {\n    let cache_map = Hiwire.pop_value(cache.cacheId);\n    for (let proxy_id of cache_map.values()) {\n      const cache_entry = Hiwire.pop_value(proxy_id);\n      if (!cache.leaked) {\n        Module.pyproxy_destroy(cache_entry, pyproxy_cache_destroyed_msg);\n      }\n    }\n  }\n}\nModule.pyproxy_destroy = function (proxy: PyProxy, destroyed_msg: string) {\n  if (proxy.$$.ptr === 0) {\n    return;\n  }\n  let ptrobj = _getPtr(proxy);\n  Module.finalizationRegistry.unregister(proxy);\n  destroyed_msg = destroyed_msg || \"Object has already been destroyed\";\n  let proxy_type = proxy.type;\n  let proxy_repr;\n  try {\n    proxy_repr = proxy.toString();\n  } catch (e) {\n    if (e.pyodide_fatal_error) {\n      throw e;\n    }\n  }\n  // Maybe the destructor will call JavaScript code that will somehow try\n  // to use this proxy. Mark it deleted before decrementing reference count\n  // just in case!\n  proxy.$$.ptr = 0;\n  destroyed_msg += \"\\n\" + `The object was of type \"${proxy_type}\" and `;\n  if (proxy_repr) {\n    destroyed_msg += `had repr \"${proxy_repr}\"`;\n  } else {\n    destroyed_msg += \"an error was raised when trying to generate its repr\";\n  }\n  proxy.$$.destroyed_msg = destroyed_msg;\n  pyproxy_decref_cache(proxy.$$.cache);\n  try {\n    Module._Py_DecRef(ptrobj);\n    trace_pyproxy_dealloc(proxy);\n  } catch (e) {\n    API.fatal_error(e);\n  }\n};\n// Now a lot of boilerplate to wrap the abstract Object protocol wrappers\n// defined in pyproxy.c in JavaScript functions.\nModule.callPyObjectKwargs = function (ptrobj: number, ...jsargs: any) {\n  // We don't do any checking for kwargs, checks are in PyProxy.callKwargs\n  // which only is used when the keyword arguments come from the user.\n  let kwargs = jsargs.pop();\n  let num_pos_args = jsargs.length;\n  let kwargs_names = Object.keys(kwargs);\n  let kwargs_values = Object.values(kwargs);\n  let num_kwargs = kwargs_names.length;\n  jsargs.push(...kwargs_values);\n  let idargs = Hiwire.new_value(jsargs);\n  let idkwnames = Hiwire.new_value(kwargs_names);\n  let idresult;\n  try {\n    idresult = Module.__pyproxy_apply(\n      ptrobj,\n      idargs,\n      num_pos_args,\n      idkwnames,\n      num_kwargs\n    );\n  } catch (e) {\n    API.fatal_error(e);\n  } finally {\n    Hiwire.decref(idargs);\n    Hiwire.decref(idkwnames);\n  }\n  if (idresult === 0) {\n    Module._pythonexc2js();\n  }\n  let result = Hiwire.pop_value(idresult);\n  // Automatically schedule coroutines\n  if (result && result.type === \"coroutine\" && result._ensure_future) {\n    result._ensure_future();\n  }\n  return result;\n};\nModule.callPyObject = function (ptrobj: number, ...jsargs: any) {\n  return Module.callPyObjectKwargs(ptrobj, ...jsargs, {});\n};\nexport type PyProxy = PyProxyClass & { [x: string]: any };\nexport class PyProxyClass {\n  $$: { ptr: number; cache: PyProxyCache; destroyed_msg?: string };\n  $$flags: number;\n  /** @private */\n  constructor() {\n    throw new TypeError(\"PyProxy is not a constructor\");\n  }\n  get [Symbol.toStringTag]() {\n    return \"PyProxy\";\n  }\n  /**\n   * The name of the type of the object.\n   *\n   * Usually the value is ``\"module.name\"`` but for builtins or\n   * interpreter-defined types it is just ``\"name\"``. As pseudocode this is:\n   *\n   * .. code-block:: python\n   *\n   *    ty = type(x)\n   *    if ty.__module__ == 'builtins' or ty.__module__ == \"__main__\":\n   *        return ty.__name__\n   *    else:\n   *        ty.__module__ + \".\" + ty.__name__\n   *\n   */\n  get type(): string {\n    let ptrobj = _getPtr(this);\n    return Hiwire.pop_value(Module.__pyproxy_type(ptrobj));\n  }\n  toString(): string {\n    let ptrobj = _getPtr(this);\n    let jsref_repr;\n    try {\n      jsref_repr = Module.__pyproxy_repr(ptrobj);\n    } catch (e) {\n      API.fatal_error(e);\n    }\n    if (jsref_repr === 0) {\n      Module._pythonexc2js();\n    }\n    return Hiwire.pop_value(jsref_repr);\n  }\n  /**\n   * Destroy the ``PyProxy``. This will release the memory. Any further attempt\n   * to use the object will raise an error.\n   *\n   * In a browser supporting `FinalizationRegistry\n   * <https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/FinalizationRegistry>`_\n   * Pyodide will automatically destroy the ``PyProxy`` when it is garbage\n   * collected, however there is no guarantee that the finalizer will be run in\n   * a timely manner so it is better to ``destroy`` the proxy explicitly.\n   *\n   * @param destroyed_msg The error message to print if use is attempted after\n   *        destroying. Defaults to \"Object has already been destroyed\".\n   */\n  destroy(destroyed_msg?: string) {\n    Module.pyproxy_destroy(this, destroyed_msg);\n  }\n  /**\n   * Make a new PyProxy pointing to the same Python object.\n   * Useful if the PyProxy is destroyed somewhere else.\n   */\n  copy(): PyProxy {\n    let ptrobj = _getPtr(this);\n    return Module.pyproxy_new(ptrobj, this.$$.cache);\n  }\n  /**\n   * Converts the ``PyProxy`` into a JavaScript object as best as possible. By\n   * default does a deep conversion, if a shallow conversion is desired, you can\n   * use ``proxy.toJs({depth : 1})``. See :ref:`Explicit Conversion of PyProxy\n   * <type-translations-pyproxy-to-js>` for more info.\n   * @param options\n   * @return The JavaScript object resulting from the conversion.\n   */\n  toJs({\n    depth = -1,\n    pyproxies = undefined,\n    create_pyproxies = (!!1),\n    dict_converter = undefined,\n    default_converter = undefined,\n  }: {\n    /** How many layers deep to perform the conversion. Defaults to infinite */\n    depth?: number;\n    /**\n     * If provided, ``toJs`` will store all PyProxies created in this list. This\n     * allows you to easily destroy all the PyProxies by iterating the list\n     * without having to recurse over the generated structure. The most common\n     * use case is to create a new empty list, pass the list as `pyproxies`, and\n     * then later iterate over `pyproxies` to destroy all of created proxies.\n     */\n    pyproxies?: PyProxy[];\n    /**\n     * If false, ``toJs`` will throw a ``ConversionError`` rather than\n     * producing a ``PyProxy``.\n     */\n    create_pyproxies?: boolean;\n    /**\n     * A function to be called on an iterable of pairs ``[key, value]``. Convert\n     * this iterable of pairs to the desired output. For instance,\n     * ``Object.fromEntries`` would convert the dict to an object, ``Array.from``\n     * converts it to an array of entries, and ``(it) => new Map(it)`` converts\n     * it to a ``Map`` (which is the default behavior).\n     */\n    dict_converter?: (array: Iterable<[key: string, value: any]>) => any;\n    /**\n     * Optional argument to convert objects with no default conversion. See the\n     * documentation of :any:`pyodide.to_js`.\n     */\n    default_converter?: (\n      obj: PyProxy,\n      convert: (obj: PyProxy) => any,\n      cacheConversion: (obj: PyProxy, result: any) => void\n    ) => any;\n  } = {}): any {\n    let ptrobj = _getPtr(this);\n    let idresult;\n    let proxies_id;\n    let dict_converter_id = 0;\n    let default_converter_id = 0;\n    if (!create_pyproxies) {\n      proxies_id = 0;\n    } else if (pyproxies) {\n      proxies_id = Hiwire.new_value(pyproxies);\n    } else {\n      proxies_id = Hiwire.new_value([]);\n    }\n    if (dict_converter) {\n      dict_converter_id = Hiwire.new_value(dict_converter);\n    }\n    if (default_converter) {\n      default_converter_id = Hiwire.new_value(default_converter);\n    }\n    try {\n      idresult = Module._python2js_custom(\n        ptrobj,\n        depth,\n        proxies_id,\n        dict_converter_id,\n        default_converter_id\n      );\n    } catch (e) {\n      API.fatal_error(e);\n    } finally {\n      Hiwire.decref(proxies_id);\n      Hiwire.decref(dict_converter_id);\n      Hiwire.decref(default_converter_id);\n    }\n    if (idresult === 0) {\n      Module._pythonexc2js();\n    }\n    return Hiwire.pop_value(idresult);\n  }\n  /**\n   * Check whether the :any:`PyProxy.length` getter is available on this PyProxy. A\n   * Typescript type guard.\n   */\n  supportsLength(): this is PyProxyWithLength {\n    return !!(this.$$flags & (1 << 0));\n  }\n  /**\n   * Check whether the :any:`PyProxy.get` method is available on this PyProxy. A\n   * Typescript type guard.\n   */\n  supportsGet(): this is PyProxyWithGet {\n    return !!(this.$$flags & (1 << 1));\n  }\n  /**\n   * Check whether the :any:`PyProxy.set` method is available on this PyProxy. A\n   * Typescript type guard.\n   */\n  supportsSet(): this is PyProxyWithSet {\n    return !!(this.$$flags & (1 << 2));\n  }\n  /**\n   * Check whether the :any:`PyProxy.has` method is available on this PyProxy. A\n   * Typescript type guard.\n   */\n  supportsHas(): this is PyProxyWithHas {\n    return !!(this.$$flags & (1 << 3));\n  }\n  /**\n   * Check whether the PyProxy is iterable. A Typescript type guard for\n   * :any:`PyProxy.[iterator]`.\n   */\n  isIterable(): this is PyProxyIterable {\n    return !!(this.$$flags & ((1 << 4) | (1 << 5)));\n  }\n  /**\n   * Check whether the PyProxy is iterable. A Typescript type guard for\n   * :any:`PyProxy.next`.\n   */\n  isIterator(): this is PyProxyIterator {\n    return !!(this.$$flags & (1 << 5));\n  }\n  /**\n   * Check whether the PyProxy is awaitable. A Typescript type guard, if this\n   * function returns true Typescript considers the PyProxy to be a ``Promise``.\n   */\n  isAwaitable(): this is PyProxyAwaitable {\n    return !!(this.$$flags & (1 << 6));\n  }\n  /**\n   * Check whether the PyProxy is a buffer. A Typescript type guard for\n   * :any:`PyProxy.getBuffer`.\n   */\n  isBuffer(): this is PyProxyBuffer {\n    return !!(this.$$flags & (1 << 7));\n  }\n  /**\n   * Check whether the PyProxy is a Callable. A Typescript type guard, if this\n   * returns true then Typescript considers the Proxy to be callable of\n   * signature ``(args... : any[]) => PyProxy | number | bigint | string |\n   * boolean | undefined``.\n   */\n  isCallable(): this is PyProxyCallable {\n    return !!(this.$$flags & (1 << 8));\n  }\n}\nexport type PyProxyWithLength = PyProxy & PyProxyLengthMethods;\n// Controlled by HAS_LENGTH, appears for any object with __len__ or sq_length\n// or mp_length methods\nexport class PyProxyLengthMethods {\n  /**\n   * The length of the object.\n   *\n   * Present only if the proxied Python object has a ``__len__`` method.\n   */\n  get length(): number {\n    let ptrobj = _getPtr(this);\n    let length;\n    try {\n      length = Module._PyObject_Size(ptrobj);\n    } catch (e) {\n      API.fatal_error(e);\n    }\n    if (length === -1) {\n      Module._pythonexc2js();\n    }\n    return length;\n  }\n}\nexport type PyProxyWithGet = PyProxy & PyProxyGetItemMethods;\n// Controlled by HAS_GET, appears for any class with __getitem__,\n// mp_subscript, or sq_item methods\nexport class PyProxyGetItemMethods {\n  /**\n   * This translates to the Python code ``obj[key]``.\n   *\n   * Present only if the proxied Python object has a ``__getitem__`` method.\n   *\n   * @param key The key to look up.\n   * @returns The corresponding value.\n   */\n  get(key: any): any {\n    let ptrobj = _getPtr(this);\n    let idkey = Hiwire.new_value(key);\n    let idresult;\n    try {\n      idresult = Module.__pyproxy_getitem(ptrobj, idkey);\n    } catch (e) {\n      API.fatal_error(e);\n    } finally {\n      Hiwire.decref(idkey);\n    }\n    if (idresult === 0) {\n      if (Module._PyErr_Occurred()) {\n        Module._pythonexc2js();\n      } else {\n        return undefined;\n      }\n    }\n    return Hiwire.pop_value(idresult);\n  }\n}\nexport type PyProxyWithSet = PyProxy & PyProxySetItemMethods;\n// Controlled by HAS_SET, appears for any class with __setitem__, __delitem__,\n// mp_ass_subscript,  or sq_ass_item.\nexport class PyProxySetItemMethods {\n  /**\n   * This translates to the Python code ``obj[key] = value``.\n   *\n   * Present only if the proxied Python object has a ``__setitem__`` method.\n   *\n   * @param key The key to set.\n   * @param value The value to set it to.\n   */\n  set(key: any, value: any) {\n    let ptrobj = _getPtr(this);\n    let idkey = Hiwire.new_value(key);\n    let idval = Hiwire.new_value(value);\n    let errcode;\n    try {\n      errcode = Module.__pyproxy_setitem(ptrobj, idkey, idval);\n    } catch (e) {\n      API.fatal_error(e);\n    } finally {\n      Hiwire.decref(idkey);\n      Hiwire.decref(idval);\n    }\n    if (errcode === -1) {\n      Module._pythonexc2js();\n    }\n  }\n  /**\n   * This translates to the Python code ``del obj[key]``.\n   *\n   * Present only if the proxied Python object has a ``__delitem__`` method.\n   *\n   * @param key The key to delete.\n   */\n  delete(key: any) {\n    let ptrobj = _getPtr(this);\n    let idkey = Hiwire.new_value(key);\n    let errcode;\n    try {\n      errcode = Module.__pyproxy_delitem(ptrobj, idkey);\n    } catch (e) {\n      API.fatal_error(e);\n    } finally {\n      Hiwire.decref(idkey);\n    }\n    if (errcode === -1) {\n      Module._pythonexc2js();\n    }\n  }\n}\nexport type PyProxyWithHas = PyProxy & PyProxyContainsMethods;\n// Controlled by HAS_CONTAINS flag, appears for any class with __contains__ or\n// sq_contains\nexport class PyProxyContainsMethods {\n  /**\n   * This translates to the Python code ``key in obj``.\n   *\n   * Present only if the proxied Python object has a ``__contains__`` method.\n   *\n   * @param key The key to check for.\n   * @returns Is ``key`` present?\n   */\n  has(key: any): boolean {\n    let ptrobj = _getPtr(this);\n    let idkey = Hiwire.new_value(key);\n    let result;\n    try {\n      result = Module.__pyproxy_contains(ptrobj, idkey);\n    } catch (e) {\n      API.fatal_error(e);\n    } finally {\n      Hiwire.decref(idkey);\n    }\n    if (result === -1) {\n      Module._pythonexc2js();\n    }\n    return result === 1;\n  }\n}\n/**\n * A helper for [Symbol.iterator].\n *\n * Because \"it is possible for a generator to be garbage collected without\n * ever running its finally block\", we take extra care to try to ensure that\n * we don't leak the iterator. We register it with the finalizationRegistry,\n * but if the finally block is executed, we decref the pointer and unregister.\n *\n * In order to do this, we create the generator with this inner method,\n * register the finalizer, and then return it.\n *\n * Quote from:\n * https://hacks.mozilla.org/2015/07/es6-in-depth-generators-continued/\n *\n * @private\n */\nfunction* iter_helper(iterptr: number, token: {}): Generator<any> {\n  try {\n    let item;\n    while ((item = Module.__pyproxy_iter_next(iterptr))) {\n      yield Hiwire.pop_value(item);\n    }\n  } catch (e) {\n    API.fatal_error(e);\n  } finally {\n    Module.finalizationRegistry.unregister(token);\n    Module._Py_DecRef(iterptr);\n  }\n  if (Module._PyErr_Occurred()) {\n    Module._pythonexc2js();\n  }\n}\nexport type PyProxyIterable = PyProxy & PyProxyIterableMethods;\n// Controlled by IS_ITERABLE, appears for any object with __iter__ or tp_iter,\n// unless they are iterators. See: https://docs.python.org/3/c-api/iter.html\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols\n// This avoids allocating a PyProxy wrapper for the temporary iterator.\nexport class PyProxyIterableMethods {\n  /**\n   * This translates to the Python code ``iter(obj)``. Return an iterator\n   * associated to the proxy. See the documentation for `Symbol.iterator\n   * <https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol/iterator>`_.\n   *\n   * Present only if the proxied Python object is iterable (i.e., has an\n   * ``__iter__`` method).\n   *\n   * This will be used implicitly by ``for(let x of proxy){}``.\n   */\n  [Symbol.iterator](): Iterator<any, any, any> {\n    let ptrobj = _getPtr(this);\n    let token = {};\n    let iterptr;\n    try {\n      iterptr = Module._PyObject_GetIter(ptrobj);\n    } catch (e) {\n      API.fatal_error(e);\n    }\n    if (iterptr === 0) {\n      Module._pythonexc2js();\n    }\n    let result = iter_helper(iterptr, token);\n    Module.finalizationRegistry.register(result, [iterptr, undefined], token);\n    return result;\n  }\n}\nexport type PyProxyIterator = PyProxy & PyProxyIteratorMethods;\n// Controlled by IS_ITERATOR, appears for any object with a __next__ or\n// tp_iternext method.\nexport class PyProxyIteratorMethods {\n  /** @private */\n  [Symbol.iterator]() {\n    return this;\n  }\n  /**\n   * This translates to the Python code ``next(obj)``. Returns the next value of\n   * the generator. See the documentation for `Generator.prototype.next\n   * <https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Generator/next>`_.\n   * The argument will be sent to the Python generator.\n   *\n   * This will be used implicitly by ``for(let x of proxy){}``.\n   *\n   * Present only if the proxied Python object is a generator or iterator (i.e.,\n   * has a ``send`` or ``__next__`` method).\n   *\n   * @param any The value to send to the generator. The value will be assigned\n   * as a result of a yield expression.\n   * @returns An Object with two properties: ``done`` and ``value``. When the\n   * generator yields ``some_value``, ``next`` returns ``{done : false, value :\n   * some_value}``. When the generator raises a ``StopIteration(result_value)``\n   * exception, ``next`` returns ``{done : true, value : result_value}``.\n   */\n  next(arg: any = undefined): IteratorResult<any, any> {\n    // Note: arg is optional, if arg is not supplied, it will be undefined\n    // which gets converted to \"Py_None\". This is as intended.\n    let idarg = Hiwire.new_value(arg);\n    let status;\n    let done;\n    let stackTop = Module.stackSave();\n    let res_ptr = Module.stackAlloc(4);\n    try {\n      status = Module.__pyproxyGen_Send(_getPtr(this), idarg, res_ptr);\n    } catch (e) {\n      API.fatal_error(e);\n    } finally {\n      Hiwire.decref(idarg);\n    }\n    let HEAPU32 = Module.HEAPU32;\n    let idresult = HEAPU32[(res_ptr >> 2) + 0];\n    Module.stackRestore(stackTop);\n    if (status === -1) {\n      Module._pythonexc2js();\n    }\n    let value = Hiwire.pop_value(idresult);\n    done = status === 0;\n    return { done, value };\n  }\n}\n// Another layer of boilerplate. The PyProxyHandlers have some annoying logic\n// to deal with straining out the spurious \"Function\" properties \"prototype\",\n// \"arguments\", and \"length\", to deal with correctly satisfying the Proxy\n// invariants, and to deal with the mro\nfunction python_hasattr(jsobj: PyProxyClass, jskey: any) {\n  let ptrobj = _getPtr(jsobj);\n  let idkey = Hiwire.new_value(jskey);\n  let result;\n  try {\n    result = Module.__pyproxy_hasattr(ptrobj, idkey);\n  } catch (e) {\n    API.fatal_error(e);\n  } finally {\n    Hiwire.decref(idkey);\n  }\n  if (result === -1) {\n    Module._pythonexc2js();\n  }\n  return result !== 0;\n}\n// Returns a JsRef in order to allow us to differentiate between \"not found\"\n// (in which case we return 0) and \"found 'None'\" (in which case we return\n// Js_undefined).\nfunction python_getattr(jsobj: PyProxyClass, jskey: any) {\n  let ptrobj = _getPtr(jsobj);\n  let idkey = Hiwire.new_value(jskey);\n  let idresult;\n  let cacheId = jsobj.$$.cache.cacheId;\n  try {\n    idresult = Module.__pyproxy_getattr(ptrobj, idkey, cacheId);\n  } catch (e) {\n    API.fatal_error(e);\n  } finally {\n    Hiwire.decref(idkey);\n  }\n  if (idresult === 0) {\n    if (Module._PyErr_Occurred()) {\n      Module._pythonexc2js();\n    }\n  }\n  return idresult;\n}\nfunction python_setattr(jsobj: PyProxyClass, jskey: any, jsval: any) {\n  let ptrobj = _getPtr(jsobj);\n  let idkey = Hiwire.new_value(jskey);\n  let idval = Hiwire.new_value(jsval);\n  let errcode;\n  try {\n    errcode = Module.__pyproxy_setattr(ptrobj, idkey, idval);\n  } catch (e) {\n    API.fatal_error(e);\n  } finally {\n    Hiwire.decref(idkey);\n    Hiwire.decref(idval);\n  }\n  if (errcode === -1) {\n    Module._pythonexc2js();\n  }\n}\nfunction python_delattr(jsobj: PyProxyClass, jskey: any) {\n  let ptrobj = _getPtr(jsobj);\n  let idkey = Hiwire.new_value(jskey);\n  let errcode;\n  try {\n    errcode = Module.__pyproxy_delattr(ptrobj, idkey);\n  } catch (e) {\n    API.fatal_error(e);\n  } finally {\n    Hiwire.decref(idkey);\n  }\n  if (errcode === -1) {\n    Module._pythonexc2js();\n  }\n}\n// See explanation of which methods should be defined here and what they do\n// here:\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy\nlet PyProxyHandlers = {\n  isExtensible() {\n    return (!!1);\n  },\n  has(jsobj: PyProxyClass, jskey: any) {\n    // Note: must report \"prototype\" in proxy when we are callable.\n    // (We can return the wrong value from \"get\" handler though.)\n    let objHasKey = Reflect.has(jsobj, jskey);\n    if (objHasKey) {\n      return (!!1);\n    }\n    // python_hasattr will crash if given a Symbol.\n    if (typeof jskey === \"symbol\") {\n      return (!!0);\n    }\n    if (jskey.startsWith(\"$\")) {\n      jskey = jskey.slice(1);\n    }\n    return python_hasattr(jsobj, jskey);\n  },\n  get(jsobj: PyProxyClass, jskey: any) {\n    // Preference order:\n    // 1. stuff from JavaScript\n    // 2. the result of Python getattr\n    // python_getattr will crash if given a Symbol.\n    if (jskey in jsobj || typeof jskey === \"symbol\") {\n      return Reflect.get(jsobj, jskey);\n    }\n    // If keys start with $ remove the $. User can use initial $ to\n    // unambiguously ask for a key on the Python object.\n    if (jskey.startsWith(\"$\")) {\n      jskey = jskey.slice(1);\n    }\n    // 2. The result of getattr\n    let idresult = python_getattr(jsobj, jskey);\n    if (idresult !== 0) {\n      return Hiwire.pop_value(idresult);\n    }\n  },\n  set(jsobj: PyProxyClass, jskey: any, jsval: any) {\n    let descr = Object.getOwnPropertyDescriptor(jsobj, jskey);\n    if (descr && !descr.writable) {\n      throw new TypeError(`Cannot set read only field '${jskey}'`);\n    }\n    // python_setattr will crash if given a Symbol.\n    if (typeof jskey === \"symbol\") {\n      return Reflect.set(jsobj, jskey, jsval);\n    }\n    if (jskey.startsWith(\"$\")) {\n      jskey = jskey.slice(1);\n    }\n    python_setattr(jsobj, jskey, jsval);\n    return (!!1);\n  },\n  deleteProperty(jsobj: PyProxyClass, jskey: any): boolean {\n    let descr = Object.getOwnPropertyDescriptor(jsobj, jskey);\n    if (descr && !descr.writable) {\n      throw new TypeError(`Cannot delete read only field '${jskey}'`);\n    }\n    if (typeof jskey === \"symbol\") {\n      return Reflect.deleteProperty(jsobj, jskey);\n    }\n    if (jskey.startsWith(\"$\")) {\n      jskey = jskey.slice(1);\n    }\n    python_delattr(jsobj, jskey);\n    // Must return \"false\" if \"jskey\" is a nonconfigurable own property.\n    // Otherwise JavaScript will throw a TypeError.\n    return !descr || !!descr.configurable;\n  },\n  ownKeys(jsobj: PyProxyClass) {\n    let ptrobj = _getPtr(jsobj);\n    let idresult;\n    try {\n      idresult = Module.__pyproxy_ownKeys(ptrobj);\n    } catch (e) {\n      API.fatal_error(e);\n    }\n    if (idresult === 0) {\n      Module._pythonexc2js();\n    }\n    let result = Hiwire.pop_value(idresult);\n    result.push(...Reflect.ownKeys(jsobj));\n    return result;\n  },\n  apply(jsobj: PyProxyClass & Function, jsthis: any, jsargs: any) {\n    return jsobj.apply(jsthis, jsargs);\n  },\n};\nexport type PyProxyAwaitable = PyProxy & Promise<any>;\n/**\n * The Promise / JavaScript awaitable API.\n * @private\n */\nexport class PyProxyAwaitableMethods {\n  $$: any;\n  /**\n   * This wraps __pyproxy_ensure_future and makes a function that converts a\n   * Python awaitable to a promise, scheduling the awaitable on the Python\n   * event loop if necessary.\n   * @private\n   */\n  _ensure_future(): Promise<any> {\n    if (this.$$.promise) {\n      return this.$$.promise;\n    }\n    let ptrobj = _getPtr(this);\n    let resolveHandle;\n    let rejectHandle;\n    let promise = new Promise((resolve, reject) => {\n      resolveHandle = resolve;\n      rejectHandle = reject;\n    });\n    let resolve_handle_id = Hiwire.new_value(resolveHandle);\n    let reject_handle_id = Hiwire.new_value(rejectHandle);\n    let errcode;\n    try {\n      errcode = Module.__pyproxy_ensure_future(\n        ptrobj,\n        resolve_handle_id,\n        reject_handle_id\n      );\n    } catch (e) {\n      API.fatal_error(e);\n    } finally {\n      Hiwire.decref(reject_handle_id);\n      Hiwire.decref(resolve_handle_id);\n    }\n    if (errcode === -1) {\n      Module._pythonexc2js();\n    }\n    this.$$.promise = promise;\n    // @ts-ignore\n    this.destroy();\n    return promise;\n  }\n  /**\n   * Runs ``asyncio.ensure_future(awaitable)``, executes\n   * ``onFulfilled(result)`` when the ``Future`` resolves successfully,\n   * executes ``onRejected(error)`` when the ``Future`` fails. Will be used\n   * implicitly by ``await obj``.\n   *\n   * See the documentation for\n   * `Promise.then\n   * <https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise/then>`_\n   *\n   * Present only if the proxied Python object is `awaitable\n   * <https://docs.python.org/3/library/asyncio-task.html?highlight=awaitable#awaitables>`_.\n   *\n   * @param onFulfilled A handler called with the result as an\n   * argument if the awaitable succeeds.\n   * @param onRejected A handler called with the error as an\n   * argument if the awaitable fails.\n   * @returns The resulting Promise.\n   */\n  then(\n    onFulfilled: (value: any) => any,\n    onRejected: (reason: any) => any\n  ): Promise<any> {\n    let promise = this._ensure_future();\n    return promise.then(onFulfilled, onRejected);\n  }\n  /**\n   * Runs ``asyncio.ensure_future(awaitable)`` and executes\n   * ``onRejected(error)`` if the future fails.\n   *\n   * See the documentation for\n   * `Promise.catch\n   * <https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise/catch>`_.\n   *\n   * Present only if the proxied Python object is `awaitable\n   * <https://docs.python.org/3/library/asyncio-task.html?highlight=awaitable#awaitables>`_.\n   *\n   * @param onRejected A handler called with the error as an\n   * argument if the awaitable fails.\n   * @returns The resulting Promise.\n   */\n  catch(onRejected: (reason: any) => any) {\n    let promise = this._ensure_future();\n    return promise.catch(onRejected);\n  }\n  /**\n   * Runs ``asyncio.ensure_future(awaitable)`` and executes\n   * ``onFinally(error)`` when the future resolves.\n   *\n   * See the documentation for\n   * `Promise.finally\n   * <https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise/finally>`_.\n   *\n   * Present only if the proxied Python object is `awaitable\n   * <https://docs.python.org/3/library/asyncio-task.html?highlight=awaitable#awaitables>`_.\n   *\n   *\n   * @param onFinally A handler that is called with zero arguments\n   * when the awaitable resolves.\n   * @returns A Promise that resolves or rejects with the same\n   * result as the original Promise, but only after executing the\n   * ``onFinally`` handler.\n   */\n  finally(onFinally: () => void) {\n    let promise = this._ensure_future();\n    return promise.finally(onFinally);\n  }\n}\nexport type PyProxyCallable = PyProxy &\n  PyProxyCallableMethods &\n  ((...args: any[]) => any);\nexport class PyProxyCallableMethods {\n  apply(jsthis: PyProxyClass, jsargs: any) {\n    return Module.callPyObject(_getPtr(this), ...jsargs);\n  }\n  call(jsthis: PyProxyClass, ...jsargs: any) {\n    return Module.callPyObject(_getPtr(this), ...jsargs);\n  }\n  /**\n   * Call the function with key word arguments.\n   * The last argument must be an object with the keyword arguments.\n   */\n  callKwargs(...jsargs: any) {\n    if (jsargs.length === 0) {\n      throw new TypeError(\n        \"callKwargs requires at least one argument (the key word argument object)\"\n      );\n    }\n    let kwargs = jsargs[jsargs.length - 1];\n    if (\n      kwargs.constructor !== undefined &&\n      kwargs.constructor.name !== \"Object\"\n    ) {\n      throw new TypeError(\"kwargs argument is not an object\");\n    }\n    return Module.callPyObjectKwargs(_getPtr(this), ...jsargs);\n  }\n}\n// @ts-ignore\nPyProxyCallableMethods.prototype.prototype = Function.prototype;\n// @ts-ignore\nlet type_to_array_map: Map<string, any> = new Map([\n  [\"i8\", Int8Array],\n  [\"u8\", Uint8Array],\n  [\"u8clamped\", Uint8ClampedArray],\n  [\"i16\", Int16Array],\n  [\"u16\", Uint16Array],\n  [\"i32\", Int32Array],\n  [\"u32\", Uint32Array],\n  [\"i32\", Int32Array],\n  [\"u32\", Uint32Array],\n  // if these aren't available, will be globalThis.BigInt64Array will be\n  // undefined rather than raising a ReferenceError.\n  [\"i64\", globalThis.BigInt64Array],\n  [\"u64\", globalThis.BigUint64Array],\n  [\"f32\", Float32Array],\n  [\"f64\", Float64Array],\n  [\"dataview\", DataView],\n]);\nexport type PyProxyBuffer = PyProxy & PyProxyBufferMethods;\nexport class PyProxyBufferMethods {\n  /**\n   * Get a view of the buffer data which is usable from JavaScript. No copy is\n   * ever performed.\n   *\n   * Present only if the proxied Python object supports the `Python Buffer\n   * Protocol <https://docs.python.org/3/c-api/buffer.html>`_.\n   *\n   * We do not support suboffsets, if the buffer requires suboffsets we will\n   * throw an error. JavaScript nd array libraries can't handle suboffsets\n   * anyways. In this case, you should use the :any:`toJs` api or copy the\n   * buffer to one that doesn't use suboffets (using e.g.,\n   * `numpy.ascontiguousarray\n   * <https://numpy.org/doc/stable/reference/generated/numpy.ascontiguousarray.html>`_).\n   *\n   * If the buffer stores big endian data or half floats, this function will\n   * fail without an explicit type argument. For big endian data you can use\n   * ``toJs``. `DataViews\n   * <https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView>`_\n   * have support for big endian data, so you might want to pass\n   * ``'dataview'`` as the type argument in that case.\n   *\n   * @param type The type of the :any:`PyBuffer.data <pyodide.PyBuffer.data>` field in the\n   * output. Should be one of: ``\"i8\"``, ``\"u8\"``, ``\"u8clamped\"``, ``\"i16\"``,\n   * ``\"u16\"``, ``\"i32\"``, ``\"u32\"``, ``\"i32\"``, ``\"u32\"``, ``\"i64\"``,\n   * ``\"u64\"``, ``\"f32\"``, ``\"f64``, or ``\"dataview\"``. This argument is\n   * optional, if absent ``getBuffer`` will try to determine the appropriate\n   * output type based on the buffer `format string\n   * <https://docs.python.org/3/library/struct.html#format-strings>`_.\n   * @returns :any:`PyBuffer <pyodide.PyBuffer>`\n   */\n  getBuffer(type?: string): PyBuffer {\n    let ArrayType = undefined;\n    if (type) {\n      ArrayType = type_to_array_map.get(type);\n      if (ArrayType === undefined) {\n        throw new Error(`Unknown type ${type}`);\n      }\n    }\n    let HEAPU32 = Module.HEAPU32;\n    let orig_stack_ptr = Module.stackSave();\n    let buffer_struct_ptr = Module.stackAlloc(\n      HEAPU32[(Module._buffer_struct_size >> 2) + 0]\n    );\n    let this_ptr = _getPtr(this);\n    let errcode;\n    try {\n      errcode = Module.__pyproxy_get_buffer(buffer_struct_ptr, this_ptr);\n    } catch (e) {\n      API.fatal_error(e);\n    }\n    if (errcode === -1) {\n      Module._pythonexc2js();\n    }\n    // This has to match the fields in buffer_struct\n    let startByteOffset = HEAPU32[(buffer_struct_ptr >> 2) + 0];\n    let minByteOffset = HEAPU32[(buffer_struct_ptr >> 2) + 1];\n    let maxByteOffset = HEAPU32[(buffer_struct_ptr >> 2) + 2];\n    let readonly = !!HEAPU32[(buffer_struct_ptr >> 2) + 3];\n    let format_ptr = HEAPU32[(buffer_struct_ptr >> 2) + 4];\n    let itemsize = HEAPU32[(buffer_struct_ptr >> 2) + 5];\n    let shape = Hiwire.pop_value(HEAPU32[(buffer_struct_ptr >> 2) + 6]);\n    let strides = Hiwire.pop_value(HEAPU32[(buffer_struct_ptr >> 2) + 7]);\n    let view_ptr = HEAPU32[(buffer_struct_ptr >> 2) + 8];\n    let c_contiguous = !!HEAPU32[(buffer_struct_ptr >> 2) + 9];\n    let f_contiguous = !!HEAPU32[(buffer_struct_ptr >> 2) + 10];\n    let format = Module.UTF8ToString(format_ptr);\n    Module.stackRestore(orig_stack_ptr);\n    let success = (!!0);\n    try {\n      let bigEndian = (!!0);\n      if (ArrayType === undefined) {\n        [ArrayType, bigEndian] = Module.processBufferFormatString(\n          format,\n          \" In this case, you can pass an explicit type argument.\"\n        );\n      }\n      let alignment = parseInt(ArrayType.name.replace(/[^0-9]/g, \"\")) / 8 || 1;\n      if (bigEndian && alignment > 1) {\n        throw new Error(\n          \"Javascript has no native support for big endian buffers. \" +\n            \"In this case, you can pass an explicit type argument. \" +\n            \"For instance, `getBuffer('dataview')` will return a `DataView`\" +\n            \"which has native support for reading big endian data. \" +\n            \"Alternatively, toJs will automatically convert the buffer \" +\n            \"to little endian.\"\n        );\n      }\n      let numBytes = maxByteOffset - minByteOffset;\n      if (\n        numBytes !== 0 &&\n        (startByteOffset % alignment !== 0 ||\n          minByteOffset % alignment !== 0 ||\n          maxByteOffset % alignment !== 0)\n      ) {\n        throw new Error(\n          `Buffer does not have valid alignment for a ${ArrayType.name}`\n        );\n      }\n      let numEntries = numBytes / alignment;\n      let offset = (startByteOffset - minByteOffset) / alignment;\n      let data;\n      if (numBytes === 0) {\n        data = new ArrayType();\n      } else {\n        data = new ArrayType(HEAPU32.buffer, minByteOffset, numEntries);\n      }\n      for (let i of strides.keys()) {\n        strides[i] /= alignment;\n      }\n      success = (!!1);\n      let result = Object.create(\n        PyBuffer.prototype,\n        Object.getOwnPropertyDescriptors({\n          offset,\n          readonly,\n          format,\n          itemsize,\n          ndim: shape.length,\n          nbytes: numBytes,\n          shape,\n          strides,\n          data,\n          c_contiguous,\n          f_contiguous,\n          _view_ptr: view_ptr,\n          _released: (!!0),\n        })\n      );\n      // Module.bufferFinalizationRegistry.register(result, view_ptr, result);\n      return result;\n    } finally {\n      if (!success) {\n        try {\n          Module._PyBuffer_Release(view_ptr);\n          Module._PyMem_Free(view_ptr);\n        } catch (e) {\n          API.fatal_error(e);\n        }\n      }\n    }\n  }\n}\nexport type TypedArray =\n  | Int8Array\n  | Uint8Array\n  | Int16Array\n  | Uint16Array\n  | Int32Array\n  | Uint32Array\n  | Uint8ClampedArray\n  | Float32Array\n  | Float64Array;\nexport type PyProxyDict = PyProxyWithGet & PyProxyWithSet & PyProxyWithHas;\n/**\n * A class to allow access to a Python data buffers from JavaScript. These are\n * produced by :any:`PyProxy.getBuffer` and cannot be constructed directly.\n * When you are done, release it with the :any:`release <PyBuffer.release>`\n * method.  See\n * `Python buffer protocol documentation\n * <https://docs.python.org/3/c-api/buffer.html>`_ for more information.\n *\n * To find the element ``x[a_1, ..., a_n]``, you could use the following code:\n *\n * .. code-block:: js\n *\n *    function multiIndexToIndex(pybuff, multiIndex){\n *       if(multindex.length !==pybuff.ndim){\n *          throw new Error(\"Wrong length index\");\n *       }\n *       let idx = pybuff.offset;\n *       for(let i = 0; i < pybuff.ndim; i++){\n *          if(multiIndex[i] < 0){\n *             multiIndex[i] = pybuff.shape[i] - multiIndex[i];\n *          }\n *          if(multiIndex[i] < 0 || multiIndex[i] >= pybuff.shape[i]){\n *             throw new Error(\"Index out of range\");\n *          }\n *          idx += multiIndex[i] * pybuff.stride[i];\n *       }\n *       return idx;\n *    }\n *    console.log(\"entry is\", pybuff.data[multiIndexToIndex(pybuff, [2, 0, -1])]);\n *\n * .. admonition:: Contiguity\n *    :class: warning\n *\n *    If the buffer is not contiguous, the ``data`` TypedArray will contain\n *    data that is not part of the buffer. Modifying this data may lead to\n *    undefined behavior.\n *\n * .. admonition:: Readonly buffers\n *    :class: warning\n *\n *    If ``buffer.readonly`` is ``true``, you should not modify the buffer.\n *    Modifying a readonly buffer may lead to undefined behavior.\n *\n * .. admonition:: Converting between TypedArray types\n *    :class: warning\n *\n *    The following naive code to change the type of a typed array does not\n *    work:\n *\n *    .. code-block:: js\n *\n *        // Incorrectly convert a TypedArray.\n *        // Produces a Uint16Array that points to the entire WASM memory!\n *        let myarray = new Uint16Array(buffer.data.buffer);\n *\n *    Instead, if you want to convert the output TypedArray, you need to say:\n *\n *    .. code-block:: js\n *\n *        // Correctly convert a TypedArray.\n *        let myarray = new Uint16Array(\n *            buffer.data.buffer,\n *            buffer.data.byteOffset,\n *            buffer.data.byteLength\n *        );\n */\nexport class PyBuffer {\n  /**\n   * The offset of the first entry of the array. For instance if our array\n   * is 3d, then you will find ``array[0,0,0]`` at\n   * ``pybuf.data[pybuf.offset]``\n   */\n  offset: number;\n  /**\n   * If the data is readonly, you should not modify it. There is no way\n   * for us to enforce this, but it may cause very weird behavior.\n   */\n  readonly: boolean;\n  /**\n   * The format string for the buffer. See `the Python documentation on\n   * format strings\n   * <https://docs.python.org/3/library/struct.html#format-strings>`_.\n   */\n  format: string;\n  /**\n   * How large is each entry (in bytes)?\n   */\n  itemsize: number;\n  /**\n   * The number of dimensions of the buffer. If ``ndim`` is 0, the buffer\n   * represents a single scalar or struct. Otherwise, it represents an\n   * array.\n   */\n  ndim: number;\n  /**\n   * The total number of bytes the buffer takes up. This is equal to\n   * ``buff.data.byteLength``.\n   */\n  nbytes: number;\n  /**\n   * The shape of the buffer, that is how long it is in each dimension.\n   * The length will be equal to ``ndim``. For instance, a 2x3x4 array\n   * would have shape ``[2, 3, 4]``.\n   */\n  shape: number[];\n  /**\n   * An array of of length ``ndim`` giving the number of elements to skip\n   * to get to a new element in each dimension. See the example definition\n   * of a ``multiIndexToIndex`` function above.\n   */\n  strides: number[];\n  /**\n   * The actual data. A typed array of an appropriate size backed by a\n   * segment of the WASM memory.\n   *\n   * The ``type`` argument of :any:`PyProxy.getBuffer`\n   * determines which sort of ``TypedArray`` this is. By default\n   * :any:`PyProxy.getBuffer` will look at the format string to determine the most\n   * appropriate option.\n   */\n  data: TypedArray;\n  /**\n   * Is it C contiguous?\n   */\n  c_contiguous: boolean;\n  /**\n   * Is it Fortran contiguous?\n   */\n  f_contiguous: boolean;\n  /**\n   * @private\n   */\n  _released: boolean;\n  /**\n   * @private\n   */\n  _view_ptr: number;\n  /**\n   * @private\n   */\n  constructor() {\n    throw new TypeError(\"PyBuffer is not a constructor\");\n  }\n  /**\n   * Release the buffer. This allows the memory to be reclaimed.\n   */\n  release() {\n    if (this._released) {\n      return;\n    }\n    // Module.bufferFinalizationRegistry.unregister(this);\n    try {\n      Module._PyBuffer_Release(this._view_ptr);\n      Module._PyMem_Free(this._view_ptr);\n    } catch (e) {\n      API.fatal_error(e);\n    }\n    this._released = (!!1);\n    // @ts-ignore\n    this.data = null;\n  }\n}\n","import { Module, API, Tests } from \"./module.js\";\nimport { IN_NODE, nodeFsPromisesMod, _loadBinaryFile } from \"./compat.js\";\nimport { PyProxy, isPyProxy } from \"./pyproxy.gen\";\n\n/** @private */\nlet baseURL: string;\n/**\n * Initialize the packages index. This is called as early as possible in\n * loadPyodide so that fetching packages.json can occur in parallel with other\n * operations.\n * @param indexURL\n * @private\n */\nexport async function initializePackageIndex(indexURL: string) {\n  baseURL = indexURL;\n  let package_json;\n  if (IN_NODE) {\n    const package_string = await nodeFsPromisesMod.readFile(\n      `${indexURL}packages.json`\n    );\n    package_json = JSON.parse(package_string);\n  } else {\n    let response = await fetch(`${indexURL}packages.json`);\n    package_json = await response.json();\n  }\n  if (!package_json.packages) {\n    throw new Error(\n      \"Loaded packages.json does not contain the expected key 'packages'.\"\n    );\n  }\n  API.packages = package_json.packages;\n\n  // compute the inverted index for imports to package names\n  API._import_name_to_package_name = new Map();\n  for (let name of Object.keys(API.packages)) {\n    for (let import_name of API.packages[name].imports) {\n      API._import_name_to_package_name.set(import_name, name);\n    }\n  }\n}\n\n//\n// Dependency resolution\n//\nconst DEFAULT_CHANNEL = \"default channel\";\n// Regexp for validating package name and URI\nconst package_uri_regexp = /^.*?([^\\/]*)\\.whl$/;\n\nfunction _uri_to_package_name(package_uri: string): string | undefined {\n  let match = package_uri_regexp.exec(package_uri);\n  if (match) {\n    let wheel_name = match[1].toLowerCase();\n    return wheel_name.split(\"-\").slice(0, -4).join(\"-\");\n  }\n}\n\n/**\n * Recursively add a package and its dependencies to toLoad and toLoadShared.\n * A helper function for recursiveDependencies.\n * @param name The package to add\n * @param toLoad The set of names of packages to load\n * @param toLoadShared The set of names of shared libraries to load\n * @private\n */\nfunction addPackageToLoad(\n  name: string,\n  toLoad: Map<string, string>,\n  toLoadShared: Map<string, string>\n) {\n  name = name.toLowerCase();\n  if (toLoad.has(name)) {\n    return;\n  }\n  const pkg_info = API.packages[name];\n  if (!pkg_info) {\n    throw new Error(`No known package with name '${name}'`);\n  }\n  if (pkg_info.shared_library) {\n    toLoadShared.set(name, DEFAULT_CHANNEL);\n  } else {\n    toLoad.set(name, DEFAULT_CHANNEL);\n  }\n  // If the package is already loaded, we don't add dependencies, but warn\n  // the user later. This is especially important if the loaded package is\n  // from a custom url, in which case adding dependencies is wrong.\n  if (loadedPackages[name] !== undefined) {\n    return;\n  }\n\n  for (let dep_name of pkg_info.depends) {\n    addPackageToLoad(dep_name, toLoad, toLoadShared);\n  }\n}\n\n/**\n * Calculate the dependencies of a set of packages\n * @param names The list of names whose dependencies we need to calculate.\n * @returns Two sets, the set of normal dependencies and the set of shared\n * dependencies\n * @private\n */\nfunction recursiveDependencies(\n  names: string[],\n  errorCallback: (err: string) => void\n) {\n  const toLoad = new Map();\n  const toLoadShared = new Map();\n  for (let name of names) {\n    const pkgname = _uri_to_package_name(name);\n    if (pkgname === undefined) {\n      addPackageToLoad(name, toLoad, toLoadShared);\n      continue;\n    }\n    if (toLoad.has(pkgname) && toLoad.get(pkgname) !== name) {\n      errorCallback(\n        `Loading same package ${pkgname} from ${name} and ${toLoad.get(\n          pkgname\n        )}`\n      );\n      continue;\n    }\n    toLoad.set(pkgname, name);\n  }\n  return [toLoad, toLoadShared];\n}\n\n//\n// Dependency download and install\n//\n\n/**\n * Download a package. If `channel` is `DEFAULT_CHANNEL`, look up the wheel URL\n * relative to baseURL from `packages.json`, otherwise use the URL specified by\n * `channel`.\n * @param name The name of the package\n * @param channel Either `DEFAULT_CHANNEL` or the absolute URL to the\n * wheel or the path to the wheel relative to baseURL.\n * @returns The binary data for the package\n * @private\n */\nasync function downloadPackage(\n  name: string,\n  channel: string\n): Promise<Uint8Array> {\n  let file_name;\n  if (channel === DEFAULT_CHANNEL) {\n    if (!(name in API.packages)) {\n      throw new Error(`Internal error: no entry for package named ${name}`);\n    }\n    file_name = API.packages[name].file_name;\n  } else {\n    file_name = channel;\n  }\n  return await _loadBinaryFile(baseURL, file_name);\n}\n\n/**\n * Install the package into the file system.\n * @param name The name of the package\n * @param buffer The binary data returned by downloadPkgBuffer\n * @private\n */\nasync function installPackage(name: string, buffer: Uint8Array) {\n  let pkg = API.packages[name];\n  if (!pkg) {\n    pkg = {\n      file_name: \".whl\",\n      install_dir: \"site\",\n      shared_library: false,\n      depends: [],\n      imports: [] as string[],\n    };\n  }\n  const filename = pkg.file_name;\n  // This Python helper function unpacks the buffer and lists out any so files therein.\n  const dynlibs = API.package_loader.unpack_buffer.callKwargs({\n    buffer,\n    filename,\n    target: pkg.install_dir,\n    calculate_dynlibs: true,\n  });\n  for (const dynlib of dynlibs) {\n    await loadDynlib(dynlib, pkg.shared_library);\n  }\n  loadedPackages[name] = pkg;\n}\n\n/**\n * @returns A new asynchronous lock\n * @private\n */\nfunction createLock() {\n  // This is a promise that is resolved when the lock is open, not resolved when lock is held.\n  let _lock = Promise.resolve();\n\n  /**\n   * Acquire the async lock\n   * @returns A zero argument function that releases the lock.\n   * @private\n   */\n  async function acquireLock() {\n    const old_lock = _lock;\n    let releaseLock: () => void;\n    _lock = new Promise((resolve) => (releaseLock = resolve));\n    await old_lock;\n    // @ts-ignore\n    return releaseLock;\n  }\n  return acquireLock;\n}\n\n// Emscripten has a lock in the corresponding code in library_browser.js. I\n// don't know why we need it, but quite possibly bad stuff will happen without\n// it.\nconst acquireDynlibLock = createLock();\n\n/**\n * Load a dynamic library. This is an async operation and Python imports are\n * synchronous so we have to do it ahead of time. When we add more support for\n * synchronous I/O, we could consider doing this later as a part of a Python\n * import hook.\n *\n * @param lib The file system path to the library.\n * @param shared Is this a shared library or not?\n * @private\n */\nasync function loadDynlib(lib: string, shared: boolean) {\n  const node = Module.FS.lookupPath(lib).node;\n  let byteArray;\n  if (node.mount.type == Module.FS.filesystems.MEMFS) {\n    byteArray = Module.FS.filesystems.MEMFS.getFileDataAsTypedArray(\n      Module.FS.lookupPath(lib).node\n    );\n  } else {\n    byteArray = Module.FS.readFile(lib);\n  }\n  const releaseDynlibLock = await acquireDynlibLock();\n  try {\n    const module = await Module.loadWebAssemblyModule(byteArray, {\n      loadAsync: true,\n      nodelete: true,\n      allowUndefined: true,\n    });\n    Module.preloadedWasm[lib] = module;\n    Module.preloadedWasm[lib.split(\"/\").pop()!] = module;\n    if (shared) {\n      Module.loadDynamicLibrary(lib, {\n        global: true,\n        nodelete: true,\n      });\n    }\n  } catch (e) {\n    if (e.message.includes(\"need to see wasm magic number\")) {\n      console.warn(\n        `Failed to load dynlib ${lib}. We probably just tried to load a linux .so file or something.`\n      );\n      return;\n    }\n    throw e;\n  } finally {\n    releaseDynlibLock();\n  }\n}\nTests.loadDynlib = loadDynlib;\n\nconst acquirePackageLock = createLock();\n\n/**\n * Load a package or a list of packages over the network. This installs the\n * package in the virtual filesystem. The package needs to be imported from\n * Python before it can be used.\n *\n * @param names Either a single package name or\n * URL or a list of them. URLs can be absolute or relative. The URLs must have\n * file name ``<package-name>.js`` and there must be a file called\n * ``<package-name>.data`` in the same directory. The argument can be a\n * ``PyProxy`` of a list, in which case the list will be converted to JavaScript\n * and the ``PyProxy`` will be destroyed.\n * @param messageCallback A callback, called with progress messages\n *    (optional)\n * @param errorCallback A callback, called with error/warning messages\n *    (optional)\n * @async\n */\nexport async function loadPackage(\n  names: string | PyProxy | Array<string>,\n  messageCallback?: (msg: string) => void,\n  errorCallback?: (msg: string) => void\n) {\n  messageCallback = messageCallback || console.log;\n  errorCallback = errorCallback || console.error;\n  if (isPyProxy(names)) {\n    names = names.toJs();\n  }\n  if (!Array.isArray(names)) {\n    names = [names as string];\n  }\n\n  const [toLoad, toLoadShared] = recursiveDependencies(names, errorCallback);\n\n  for (const [pkg, uri] of [...toLoad, ...toLoadShared]) {\n    const loaded = loadedPackages[pkg];\n    if (loaded === undefined) {\n      continue;\n    }\n    toLoad.delete(pkg);\n    toLoadShared.delete(pkg);\n    // If uri is from the DEFAULT_CHANNEL, we assume it was added as a\n    // dependency, which was previously overridden.\n    if (loaded === uri || uri === DEFAULT_CHANNEL) {\n      messageCallback(`${pkg} already loaded from ${loaded}`);\n    } else {\n      errorCallback(\n        `URI mismatch, attempting to load package ${pkg} from ${uri} ` +\n          `while it is already loaded from ${loaded}. To override a dependency, ` +\n          `load the custom package first.`\n      );\n    }\n  }\n\n  if (toLoad.size === 0 && toLoadShared.size === 0) {\n    messageCallback(\"No new packages to load\");\n    return;\n  }\n\n  const packageNames = [...toLoad.keys(), ...toLoadShared.keys()].join(\", \");\n  const releaseLock = await acquirePackageLock();\n  try {\n    messageCallback(`Loading ${packageNames}`);\n    const sharedLibraryLoadPromises: { [name: string]: Promise<Uint8Array> } =\n      {};\n    const packageLoadPromises: { [name: string]: Promise<Uint8Array> } = {};\n    for (const [name, channel] of toLoadShared) {\n      if (loadedPackages[name]) {\n        // Handle the race condition where the package was loaded between when\n        // we did dependency resolution and when we acquired the lock.\n        toLoadShared.delete(name);\n        continue;\n      }\n      sharedLibraryLoadPromises[name] = downloadPackage(name, channel);\n    }\n    for (const [name, channel] of toLoad) {\n      if (loadedPackages[name]) {\n        // Handle the race condition where the package was loaded between when\n        // we did dependency resolution and when we acquired the lock.\n        toLoad.delete(name);\n        continue;\n      }\n      packageLoadPromises[name] = downloadPackage(name, channel);\n    }\n\n    const loaded: string[] = [];\n    const failed: { [name: string]: any } = {};\n    // TODO: add support for prefetching modules by awaiting on a promise right\n    // here which resolves in loadPyodide when the bootstrap is done.\n    const sharedLibraryInstallPromises: { [name: string]: Promise<void> } = {};\n    const packageInstallPromises: { [name: string]: Promise<void> } = {};\n    for (const [name, channel] of toLoadShared) {\n      sharedLibraryInstallPromises[name] = sharedLibraryLoadPromises[name]\n        .then(async (buffer) => {\n          await installPackage(name, buffer);\n          loaded.push(name);\n          loadedPackages[name] = channel;\n        })\n        .catch((err) => {\n          console.warn(err);\n          failed[name] = err;\n        });\n    }\n\n    await Promise.all(Object.values(sharedLibraryInstallPromises));\n    for (const [name, channel] of toLoad) {\n      packageInstallPromises[name] = packageLoadPromises[name]\n        .then(async (buffer) => {\n          await installPackage(name, buffer);\n          loaded.push(name);\n          loadedPackages[name] = channel;\n        })\n        .catch((err) => {\n          console.warn(err);\n          failed[name] = err;\n        });\n    }\n    await Promise.all(Object.values(packageInstallPromises));\n\n    Module.reportUndefinedSymbols();\n    if (loaded.length > 0) {\n      const successNames = loaded.join(\", \");\n      messageCallback(`Loaded ${successNames}`);\n    }\n    if (Object.keys(failed).length > 0) {\n      const failedNames = Object.keys(failed).join(\", \");\n      messageCallback(`Failed to load ${failedNames}`);\n      for (const [name, err] of Object.entries(failed)) {\n        console.warn(`The following error occurred while loading ${name}:`);\n        console.error(err);\n      }\n    }\n\n    // We have to invalidate Python's import caches, or it won't\n    // see the new files.\n    API.importlib.invalidate_caches();\n  } finally {\n    releaseLock();\n  }\n}\n\n/**\n * The list of packages that Pyodide has loaded.\n * Use ``Object.keys(pyodide.loadedPackages)`` to get the list of names of\n * loaded packages, and ``pyodide.loadedPackages[package_name]`` to access\n * install location for a particular ``package_name``.\n */\nexport let loadedPackages: { [key: string]: string } = {};\n","import ErrorStackParser from \"error-stack-parser\";\nimport { Module, API, Hiwire, Tests } from \"./module.js\";\n\n/**\n * Dump the Python traceback to the browser console.\n *\n * @private\n */\nAPI.dump_traceback = function () {\n  const fd_stdout = 1;\n  Module.__Py_DumpTraceback(fd_stdout, Module._PyGILState_GetThisThreadState());\n};\n\nfunction ensureCaughtObjectIsError(e: any) {\n  if (typeof e === \"string\") {\n    // Sometimes emscripten throws a raw string...\n    e = new Error(e);\n  } else if (\n    typeof e !== \"object\" ||\n    e === null ||\n    typeof e.stack !== \"string\" ||\n    typeof e.message !== \"string\"\n  ) {\n    // We caught something really weird. Be brave!\n    let msg = `A value of type ${typeof e} with tag ${Object.prototype.toString.call(\n      e\n    )} was thrown as an error!`;\n    try {\n      msg += `\\nString interpolation of the thrown value gives \"\"\"${e}\"\"\".`;\n    } catch (e) {\n      msg += `\\nString interpolation of the thrown value fails.`;\n    }\n    try {\n      msg += `\\nThe thrown value's toString method returns \"\"\"${e.toString()}\"\"\".`;\n    } catch (e) {\n      msg += `\\nThe thrown value's toString method fails.`;\n    }\n    e = new Error(msg);\n  }\n  // Post conditions:\n  // 1. typeof e is object\n  // 2. hiwire_is_error(e) returns true\n  return e;\n}\n\nlet fatal_error_occurred = false;\n/**\n * Signal a fatal error.\n *\n * Dumps the Python traceback, shows a JavaScript traceback, and prints a clear\n * message indicating a fatal error. It then dummies out the public API so that\n * further attempts to use Pyodide will clearly indicate that Pyodide has failed\n * and can no longer be used. pyodide._module is left accessible, and it is\n * possible to continue using Pyodide for debugging purposes if desired.\n *\n * @argument e {Error} The cause of the fatal error.\n * @private\n */\nAPI.fatal_error = function (e: any) {\n  if (e && e.pyodide_fatal_error) {\n    return;\n  }\n  if (fatal_error_occurred) {\n    console.error(\"Recursive call to fatal_error. Inner error was:\");\n    console.error(e);\n    return;\n  }\n  if (typeof e === \"number\") {\n    // Hopefully a C++ exception? Have to do some conversion work.\n    e = convertCppException(e);\n  } else {\n    e = ensureCaughtObjectIsError(e);\n  }\n  // Mark e so we know not to handle it later in EM_JS wrappers\n  e.pyodide_fatal_error = true;\n  fatal_error_occurred = true;\n  console.error(\n    \"Pyodide has suffered a fatal error. Please report this to the Pyodide maintainers.\"\n  );\n  console.error(\"The cause of the fatal error was:\");\n  if (API.inTestHoist) {\n    // Test hoist won't print the error object in a useful way so convert it to\n    // string.\n    console.error(e.toString());\n    console.error(e.stack);\n  } else {\n    console.error(e);\n  }\n  try {\n    API.dump_traceback();\n    for (let key of Object.keys(API.public_api)) {\n      if (key.startsWith(\"_\") || key === \"version\") {\n        continue;\n      }\n      Object.defineProperty(API.public_api, key, {\n        enumerable: true,\n        configurable: true,\n        get: () => {\n          throw new Error(\n            \"Pyodide already fatally failed and can no longer be used.\"\n          );\n        },\n      });\n    }\n    if (API.on_fatal) {\n      API.on_fatal(e);\n    }\n  } catch (err2) {\n    console.error(\"Another error occurred while handling the fatal error:\");\n    console.error(err2);\n  }\n  throw e;\n};\n\nclass CppException extends Error {\n  ty: string;\n  constructor(ty: string, msg: string) {\n    super(msg);\n    this.ty = ty;\n  }\n}\nObject.defineProperty(CppException.prototype, \"name\", {\n  get() {\n    return `${this.constructor.name} ${this.ty}`;\n  },\n});\n\n/**\n *\n * Return the type name, whether the pointer inherits from exception, and the\n * vtable pointer for the type.\n *\n * This code is based on imitating:\n * 1. the implementation of __cxa_find_matching_catch\n * 2. the disassembly from:\n * ```C++\n * try {\n *    ...\n * } catch(exception e){\n *    ...\n * }\n *\n * @param ptr\n * @returns\n * exc_type_name : the type name of the exception, as would be reported by\n * `typeid(type).name()` but also demangled.\n *\n * is_exception_subclass : true if the object is a subclass of exception. In\n * this case we will use `exc.what()` to get an error message.\n *\n * adjusted_ptr : The adjusted vtable pointer for the exception to use to invoke\n * exc.what().\n *\n * @private\n */\nfunction cppExceptionInfo(ptr: number): [string, boolean, number] {\n  const base_exception_type = Module._exc_type();\n  const ei = new Module.ExceptionInfo(ptr);\n  const caught_exception_type = ei.get_type();\n  const stackTop = Module.stackSave();\n  const exceptionThrowBuf = Module.stackAlloc(4);\n  Module.HEAP32[exceptionThrowBuf / 4] = ptr;\n  const exc_type_name = Module.demangle(\n    Module.UTF8ToString(Module._exc_typename(caught_exception_type))\n  );\n  const is_exception_subclass = !!Module.___cxa_can_catch(\n    base_exception_type,\n    caught_exception_type,\n    exceptionThrowBuf\n  );\n  const adjusted_ptr = Module.HEAP32[exceptionThrowBuf / 4];\n  Module.stackRestore(stackTop);\n  return [exc_type_name, is_exception_subclass, adjusted_ptr];\n}\n\nfunction convertCppException(ptr: number): CppException {\n  const [exc_type_name, is_exception_subclass, adjusted_ptr] =\n    cppExceptionInfo(ptr);\n  let msg;\n  if (is_exception_subclass) {\n    // If the ptr inherits from exception, we can use exception.what() to\n    // generate a message\n    const msgPtr = Module._exc_what(adjusted_ptr);\n    msg = Module.UTF8ToString(msgPtr);\n  } else {\n    msg = `The exception is an object of type ${exc_type_name} at address ${ptr} which does not inherit from std::exception`;\n  }\n  return new CppException(exc_type_name, msg);\n}\n// Expose for testing\nTests.convertCppException = convertCppException;\n\nfunction isPyodideFrame(frame: ErrorStackParser.StackFrame): boolean {\n  const fileName = frame.fileName || \"\";\n  if (fileName.includes(\"pyodide.asm\")) {\n    return true;\n  }\n  if (fileName.includes(\"wasm-function\")) {\n    return true;\n  }\n  if (!fileName.includes(\"pyodide.js\")) {\n    return false;\n  }\n  let funcName = frame.functionName || \"\";\n  if (funcName.startsWith(\"Object.\")) {\n    funcName = funcName.slice(\"Object.\".length);\n  }\n  if (funcName in API.public_api && funcName !== \"PythonError\") {\n    frame.functionName = funcName;\n    return false;\n  }\n  return true;\n}\n\nfunction isErrorStart(frame: ErrorStackParser.StackFrame): boolean {\n  if (!isPyodideFrame(frame)) {\n    return false;\n  }\n  const funcName = frame.functionName;\n  return funcName === \"PythonError\" || funcName === \"new_error\";\n}\n\nModule.handle_js_error = function (e: any) {\n  if (e && e.pyodide_fatal_error) {\n    throw e;\n  }\n  if (e instanceof Module._PropagatePythonError) {\n    // Python error indicator is already set in this case. If this branch is\n    // not taken, Python error indicator should be unset, and we have to set\n    // it. In this case we don't want to tamper with the traceback.\n    return;\n  }\n  let restored_error = false;\n  if (e instanceof API.PythonError) {\n    // Try to restore the original Python exception.\n    restored_error = Module._restore_sys_last_exception(e.__error_address);\n  }\n  let stack: any;\n  let weirdCatch;\n  try {\n    stack = ErrorStackParser.parse(e);\n  } catch (_) {\n    weirdCatch = true;\n  }\n  if (weirdCatch) {\n    e = ensureCaughtObjectIsError(e);\n  }\n  if (!restored_error) {\n    // Wrap the JavaScript error\n    let eidx = Hiwire.new_value(e);\n    let err = Module._JsProxy_create(eidx);\n    Module._set_error(err);\n    Module._Py_DecRef(err);\n    Hiwire.decref(eidx);\n  }\n  if (weirdCatch) {\n    // In this case we have no stack frames so we can quit\n    return;\n  }\n  if (isErrorStart(stack[0])) {\n    while (isPyodideFrame(stack[0])) {\n      stack.shift();\n    }\n  }\n  // Add the Javascript stack frames to the Python traceback\n  for (const frame of stack) {\n    if (isPyodideFrame(frame)) {\n      break;\n    }\n    const funcnameAddr = Module.stringToNewUTF8(frame.functionName || \"???\");\n    const fileNameAddr = Module.stringToNewUTF8(frame.fileName || \"???.js\");\n    Module.__PyTraceback_Add(funcnameAddr, fileNameAddr, frame.lineNumber);\n    Module._free(funcnameAddr);\n    Module._free(fileNameAddr);\n  }\n};\n\n/**\n * A JavaScript error caused by a Python exception.\n *\n * In order to reduce the risk of large memory leaks, the ``PythonError``\n * contains no reference to the Python exception that caused it. You can find\n * the actual Python exception that caused this error as `sys.last_value\n * <https://docs.python.org/3/library/sys.html#sys.last_value>`_.\n *\n * See :ref:`type-translations-errors` for more information.\n *\n * .. admonition:: Avoid Stack Frames\n *    :class: warning\n *\n *    If you make a :any:`PyProxy` of ``sys.last_value``, you should be\n *    especially careful to :any:`destroy() <PyProxy.destroy>` it when you are\n *    done. You may leak a large amount of memory including the local\n *    variables of all the stack frames in the traceback if you don't. The\n *    easiest way is to only handle the exception in Python.\n */\nexport class PythonError extends Error {\n  /**  The address of the error we are wrapping. We may later compare this\n   * against sys.last_value.\n   * WARNING: we don't own a reference to this pointer, dereferencing it\n   * may be a use-after-free error!\n   * @private\n   */\n  __error_address: number;\n\n  constructor(message: string, error_address: number) {\n    const oldLimit = Error.stackTraceLimit;\n    Error.stackTraceLimit = Infinity;\n    super(message);\n    Error.stackTraceLimit = oldLimit;\n    this.__error_address = error_address;\n  }\n}\nObject.defineProperty(PythonError.prototype, \"name\", {\n  value: PythonError.name,\n});\nAPI.PythonError = PythonError;\n// A special marker. If we call a CPython API from an EM_JS function and the\n// CPython API sets an error, we might want to return an error status back to\n// C keeping the current Python error flag. This signals to the EM_JS wrappers\n// that the Python error flag is set and to leave it alone and return the\n// appropriate error value (either NULL or -1).\nclass _PropagatePythonError extends Error {\n  constructor() {\n    API.fail_test = true;\n    super(\n      \"If you are seeing this message, an internal Pyodide error has \" +\n        \"occurred. Please report it to the Pyodide maintainers.\"\n    );\n  }\n}\nObject.defineProperty(_PropagatePythonError.prototype, \"name\", {\n  value: _PropagatePythonError.name,\n});\nModule._PropagatePythonError = _PropagatePythonError;\n","import { Module, API, Hiwire } from \"./module\";\nimport { loadPackage, loadedPackages } from \"./load-package\";\nimport { isPyProxy, PyBuffer, PyProxy, TypedArray } from \"./pyproxy.gen\";\nimport { PythonError } from \"./error_handling.gen\";\nexport { loadPackage, loadedPackages, isPyProxy };\n\n/**\n * An alias to the Python :py:mod:`pyodide` package.\n *\n * You can use this to call functions defined in the Pyodide Python package\n * from JavaScript.\n */\nexport let pyodide_py: PyProxy; // actually defined in loadPyodide (see pyodide.js)\n\n/**\n *\n * An alias to the global Python namespace.\n *\n * For example, to access a variable called ``foo`` in the Python global\n * scope, use ``pyodide.globals.get(\"foo\")``\n */\nexport let globals: PyProxy; // actually defined in loadPyodide (see pyodide.js)\n\n/**\n *\n * The Pyodide version.\n *\n * It can be either the exact release version (e.g. ``0.1.0``), or\n * the latest release version followed by the number of commits since, and\n * the git hash of the current commit (e.g. ``0.1.0-1-bd84646``).\n */\nexport let version: string = \"\"; // actually defined in loadPyodide (see pyodide.js)\n\nlet runPythonPositionalGlobalsDeprecationWarned = false;\n/**\n * Runs a string of Python code from JavaScript, using :any:`pyodide.eval_code`\n * to evaluate the code. If the last statement in the Python code is an\n * expression (and the code doesn't end with a semicolon), the value of the\n * expression is returned.\n *\n * .. admonition:: Positional globals argument\n *    :class: warning\n *\n *    In Pyodide v0.19, this function took the globals parameter as a positional\n *    argument rather than as a named argument. In v0.20 this will still work\n *    but it is deprecated. It will be removed in v0.21.\n *\n * @param code Python code to evaluate\n * @param options\n * @param options.globals An optional Python dictionary to use as the globals.\n *        Defaults to :any:`pyodide.globals`.\n * @returns The result of the Python code translated to JavaScript. See the\n *          documentation for :any:`pyodide.eval_code` for more info.\n */\nexport function runPython(\n  code: string,\n  options: { globals?: PyProxy } = {}\n): any {\n  if (API.isPyProxy(options)) {\n    options = { globals: options as PyProxy };\n    if (!runPythonPositionalGlobalsDeprecationWarned) {\n      console.warn(\n        \"Passing a PyProxy as the second argument to runPython is deprecated and will be removed in v0.21. Use 'runPython(code, {globals : some_dict})' instead.\"\n      );\n      runPythonPositionalGlobalsDeprecationWarned = true;\n    }\n  }\n  if (!options.globals) {\n    options.globals = API.globals;\n  }\n  return API.pyodide_py.eval_code(code, options.globals);\n}\nAPI.runPython = runPython;\n\n/**\n * Inspect a Python code chunk and use :js:func:`pyodide.loadPackage` to install\n * any known packages that the code chunk imports. Uses the Python API\n * :func:`pyodide.find\\_imports` to inspect the code.\n *\n * For example, given the following code as input\n *\n * .. code-block:: python\n *\n *    import numpy as np x = np.array([1, 2, 3])\n *\n * :js:func:`loadPackagesFromImports` will call\n * ``pyodide.loadPackage(['numpy'])``.\n *\n * @param code The code to inspect.\n * @param messageCallback The ``messageCallback`` argument of\n * :any:`pyodide.loadPackage` (optional).\n * @param errorCallback The ``errorCallback`` argument of\n * :any:`pyodide.loadPackage` (optional).\n * @async\n */\nexport async function loadPackagesFromImports(\n  code: string,\n  messageCallback?: (msg: string) => void,\n  errorCallback?: (err: string) => void\n) {\n  let pyimports = API.pyodide_py.find_imports(code);\n  let imports;\n  try {\n    imports = pyimports.toJs();\n  } finally {\n    pyimports.destroy();\n  }\n  if (imports.length === 0) {\n    return;\n  }\n\n  let packageNames = API._import_name_to_package_name;\n  let packages: Set<string> = new Set();\n  for (let name of imports) {\n    if (packageNames.has(name)) {\n      packages.add(packageNames.get(name));\n    }\n  }\n  if (packages.size) {\n    await loadPackage(Array.from(packages), messageCallback, errorCallback);\n  }\n}\n\n/**\n * Run a Python code string with top level await using\n * :any:`pyodide.eval_code_async` to evaluate the code. Returns a promise which\n * resolves when execution completes. If the last statement in the Python code\n * is an expression (and the code doesn't end with a semicolon), the returned\n * promise will resolve to the value of this expression.\n *\n * For example:\n *\n * .. code-block:: pyodide\n *\n *    let result = await pyodide.runPythonAsync(`\n *        from js import fetch\n *        response = await fetch(\"./packages.json\")\n *        packages = await response.json()\n *        # If final statement is an expression, its value is returned to JavaScript\n *        len(packages.packages.object_keys())\n *    `);\n *    console.log(result); // 79\n *\n * .. admonition:: Python imports\n *    :class: warning\n *\n *    Since pyodide 0.18.0, you must call :js:func:`loadPackagesFromImports` to\n *    import any python packages referenced via `import` statements in your\n *    code. This function will no longer do it for you.\n *\n * .. admonition:: Positional globals argument\n *    :class: warning\n *\n *    In Pyodide v0.19, this function took the globals parameter as a\n *    positional argument rather than as a named argument. In v0.20 this will\n *    still work  but it is deprecated. It will be removed in v0.21.\n *\n * @param code Python code to evaluate\n * @param options\n * @param options.globals An optional Python dictionary to use as the globals.\n * Defaults to :any:`pyodide.globals`.\n * @returns The result of the Python code translated to JavaScript.\n * @async\n */\nexport async function runPythonAsync(\n  code: string,\n  options: { globals?: PyProxy } = {}\n): Promise<any> {\n  if (API.isPyProxy(options)) {\n    options = { globals: options as PyProxy };\n    if (!runPythonPositionalGlobalsDeprecationWarned) {\n      console.warn(\n        \"Passing a PyProxy as the second argument to runPythonAsync is deprecated and will be removed in v0.21. Use 'runPythonAsync(code, {globals : some_dict})' instead.\"\n      );\n      runPythonPositionalGlobalsDeprecationWarned = true;\n    }\n  }\n  if (!options.globals) {\n    options.globals = API.globals;\n  }\n  return await API.pyodide_py.eval_code_async(code, options.globals);\n}\nAPI.runPythonAsync = runPythonAsync;\n\n/**\n * Registers the JavaScript object ``module`` as a JavaScript module named\n * ``name``. This module can then be imported from Python using the standard\n * Python import system. If another module by the same name has already been\n * imported, this won't have much effect unless you also delete the imported\n * module from ``sys.modules``. This calls the {any}`pyodide_py` API\n * :func:`pyodide.register_js_module`.\n *\n * @param name Name of the JavaScript module to add\n * @param module JavaScript object backing the module\n */\nexport function registerJsModule(name: string, module: object) {\n  API.pyodide_py.register_js_module(name, module);\n}\n\n/**\n * Tell Pyodide about Comlink.\n * Necessary to enable importing Comlink proxies into Python.\n */\nexport function registerComlink(Comlink: any) {\n  API._Comlink = Comlink;\n}\n\n/**\n * Unregisters a JavaScript module with given name that has been previously\n * registered with :js:func:`pyodide.registerJsModule` or\n * :func:`pyodide.register_js_module`. If a JavaScript module with that name\n * does not already exist, will throw an error. Note that if the module has\n * already been imported, this won't have much effect unless you also delete\n * the imported module from ``sys.modules``. This calls the :any:`pyodide_py` API\n * :func:`pyodide.unregister_js_module`.\n *\n * @param name Name of the JavaScript module to remove\n */\nexport function unregisterJsModule(name: string) {\n  API.pyodide_py.unregister_js_module(name);\n}\n\n/**\n * Convert the JavaScript object to a Python object as best as possible.\n *\n * This is similar to :any:`JsProxy.to_py` but for use from JavaScript. If the\n * object is immutable or a :any:`PyProxy`, it will be returned unchanged. If\n * the object cannot be converted into Python, it will be returned unchanged.\n *\n * See :ref:`type-translations-jsproxy-to-py` for more information.\n *\n * @param obj\n * @param options\n * @returns The object converted to Python.\n */\nexport function toPy(\n  obj: any,\n  {\n    depth,\n    defaultConverter,\n  }: {\n    /**\n     *  Optional argument to limit the depth of the conversion.\n     */\n    depth: number;\n    /**\n     * Optional argument to convert objects with no default conversion. See the\n     * documentation of :any:`JsProxy.to_py`.\n     */\n    defaultConverter?: (\n      value: any,\n      converter: (value: any) => any,\n      cacheConversion: (input: any, output: any) => any\n    ) => any;\n  } = { depth: -1 }\n): any {\n  // No point in converting these, it'd be dumb to proxy them so they'd just\n  // get converted back by `js2python` at the end\n  switch (typeof obj) {\n    case \"string\":\n    case \"number\":\n    case \"boolean\":\n    case \"bigint\":\n    case \"undefined\":\n      return obj;\n  }\n  if (!obj || API.isPyProxy(obj)) {\n    return obj;\n  }\n  let obj_id = 0;\n  let py_result = 0;\n  let result = 0;\n  try {\n    obj_id = Hiwire.new_value(obj);\n    try {\n      py_result = Module.js2python_convert(obj_id, { depth, defaultConverter });\n    } catch (e) {\n      if (e instanceof Module._PropagatePythonError) {\n        Module._pythonexc2js();\n      }\n      throw e;\n    }\n    if (Module._JsProxy_Check(py_result)) {\n      // Oops, just created a JsProxy. Return the original object.\n      return obj;\n      // return Module.pyproxy_new(py_result);\n    }\n    result = Module._python2js(py_result);\n    if (result === 0) {\n      Module._pythonexc2js();\n    }\n  } finally {\n    Hiwire.decref(obj_id);\n    Module._Py_DecRef(py_result);\n  }\n  return Hiwire.pop_value(result);\n}\n\n/**\n * Imports a module and returns it.\n *\n * .. admonition:: Warning\n *    :class: warning\n *\n *    This function has a completely different behavior than the old removed pyimport function!\n *\n *    ``pyimport`` is roughly equivalent to:\n *\n *    .. code-block:: js\n *\n *      pyodide.runPython(`import ${pkgname}; ${pkgname}`);\n *\n *    except that the global namespace will not change.\n *\n *    Example:\n *\n *    .. code-block:: js\n *\n *      let sysmodule = pyodide.pyimport(\"sys\");\n *      let recursionLimit = sys.getrecursionlimit();\n *\n * @param mod_name The name of the module to import\n * @returns A PyProxy for the imported module\n */\nexport function pyimport(mod_name: string): PyProxy {\n  return API.importlib.import_module(mod_name);\n}\n\nlet unpackArchivePositionalExtractDirDeprecationWarned = false;\n/**\n * Unpack an archive into a target directory.\n *\n * .. admonition:: Positional globals argument :class: warning\n *\n *    In Pyodide v0.19, this function took the extract_dir parameter as a\n *    positional argument rather than as a named argument. In v0.20 this will\n *    still work  but it is deprecated. It will be removed in v0.21.\n *\n * @param buffer The archive as an ArrayBuffer or TypedArray.\n * @param format The format of the archive. Should be one of the formats\n * recognized by `shutil.unpack_archive`. By default the options are 'bztar',\n * 'gztar', 'tar', 'zip', and 'wheel'. Several synonyms are accepted for each\n * format, e.g., for 'gztar' any of '.gztar', '.tar.gz', '.tgz', 'tar.gz' or\n * 'tgz' are considered to be synonyms.\n *\n * @param options\n * @param options.extractDir The directory to unpack the archive into. Defaults\n * to the working directory.\n */\nexport function unpackArchive(\n  buffer: TypedArray,\n  format: string,\n  options: {\n    extractDir?: string;\n  } = {}\n) {\n  if (typeof options === \"string\") {\n    if (!unpackArchivePositionalExtractDirDeprecationWarned) {\n      console.warn(\n        \"Passing a string as the third argument to unpackArchive is deprecated and will be removed in v0.21. Instead use { extract_dir : 'some_path' }\"\n      );\n      unpackArchivePositionalExtractDirDeprecationWarned = true;\n    }\n    options = { extractDir: options };\n  }\n  let extract_dir = options.extractDir;\n  API.package_loader.unpack_buffer.callKwargs({\n    buffer,\n    format,\n    extract_dir,\n  });\n}\n\n/**\n * @private\n */\nAPI.saveState = () => API.pyodide_py._state.save_state();\n\n/**\n * @private\n */\nAPI.restoreState = (state: any) => API.pyodide_py._state.restore_state(state);\n\n/**\n * Sets the interrupt buffer to be ``interrupt_buffer``. This is only useful\n * when Pyodide is used in a webworker. The buffer should be a\n * ``SharedArrayBuffer`` shared with the main browser thread (or another\n * worker). In that case, signal ``signum`` may be sent by writing ``signum``\n * into the interrupt buffer. If ``signum`` does not satisfy 0 < ``signum`` <\n * ``NSIG`` it will be silently ignored. NSIG is 65 (internally signals are\n * indicated by a bitflag).\n *\n * You can disable interrupts by calling `setInterruptBuffer(undefined)`.\n *\n * If you wish to trigger a ``KeyboardInterrupt``, write ``SIGINT`` (a 2), into\n * the interrupt buffer.\n *\n * By default ``SIGINT`` raises a ``KeyboardInterrupt`` and all other signals\n * are ignored. You can install custom signal handlers with the signal module.\n * Even signals that normally have special meaning and can't be overridden like\n * ``SIGKILL`` and ``SIGSEGV`` are ignored by default and can be used for any\n * purpose you like.\n */\nexport function setInterruptBuffer(interrupt_buffer: TypedArray) {\n  Module.HEAP8[Module._Py_EMSCRIPTEN_SIGNAL_HANDLING] = !!interrupt_buffer;\n  Module.Py_EmscriptenSignalBuffer = interrupt_buffer;\n}\n\n/**\n * Throws a KeyboardInterrupt error if a KeyboardInterrupt has been requested\n * via the interrupt buffer.\n *\n * This can be used to enable keyboard interrupts during execution of JavaScript\n * code, just as ``PyErr_CheckSignals`` is used to enable keyboard interrupts\n * during execution of C code.\n */\nexport function checkInterrupt() {\n  if (Module.__PyErr_CheckSignals()) {\n    Module._pythonexc2js();\n  }\n}\n\nexport type PyodideInterface = {\n  globals: typeof globals;\n  FS: typeof FS;\n  pyodide_py: typeof pyodide_py;\n  version: typeof version;\n  loadPackage: typeof loadPackage;\n  loadPackagesFromImports: typeof loadPackagesFromImports;\n  loadedPackages: typeof loadedPackages;\n  isPyProxy: typeof isPyProxy;\n  runPython: typeof runPython;\n  runPythonAsync: typeof runPythonAsync;\n  registerJsModule: typeof registerJsModule;\n  unregisterJsModule: typeof unregisterJsModule;\n  setInterruptBuffer: typeof setInterruptBuffer;\n  checkInterrupt: typeof checkInterrupt;\n  toPy: typeof toPy;\n  pyimport: typeof pyimport;\n  unpackArchive: typeof unpackArchive;\n  registerComlink: typeof registerComlink;\n  PythonError: typeof PythonError;\n  PyBuffer: typeof PyBuffer;\n};\n\n/**\n * An alias to the `Emscripten File System API\n * <https://emscripten.org/docs/api_reference/Filesystem-API.html>`_.\n *\n * This provides a wide range of POSIX-`like` file/device operations, including\n * `mount\n * <https://emscripten.org/docs/api_reference/Filesystem-API.html#FS.mount>`_\n * which can be used to extend the in-memory filesystem with features like `persistence\n * <https://emscripten.org/docs/api_reference/Filesystem-API.html#persistent-data>`_.\n *\n * While all the file systems implementations are enabled, only the default\n * ``MEMFS`` is guaranteed to work in all runtime settings. The implementations\n * are available as members of ``FS.filesystems``:\n * ``IDBFS``, ``NODEFS``, ``PROXYFS``, ``WORKERFS``.\n */\nexport let FS: any;\n\n/**\n * @private\n */\nexport function makePublicAPI(): PyodideInterface {\n  FS = Module.FS;\n  let namespace = {\n    globals,\n    FS,\n    pyodide_py,\n    version,\n    loadPackage,\n    loadPackagesFromImports,\n    loadedPackages,\n    isPyProxy,\n    runPython,\n    runPythonAsync,\n    registerJsModule,\n    unregisterJsModule,\n    setInterruptBuffer,\n    checkInterrupt,\n    toPy,\n    pyimport,\n    unpackArchive,\n    registerComlink,\n    PythonError,\n    PyBuffer,\n    _module: Module,\n    _api: API,\n  };\n\n  API.public_api = namespace;\n  return namespace;\n}\n","/**\n * The main bootstrap code for loading pyodide.\n */\nimport ErrorStackParser from \"error-stack-parser\";\nimport { Module, setStandardStreams, setHomeDirectory, API } from \"./module.js\";\nimport { loadScript, _loadBinaryFile, initNodeModules } from \"./compat.js\";\nimport { initializePackageIndex, loadPackage } from \"./load-package.js\";\nimport { makePublicAPI, PyodideInterface } from \"./api.js\";\nimport \"./error_handling.gen.js\";\n\nimport { PyProxy, PyProxyDict } from \"./pyproxy.gen\";\n\nexport {\n  PyProxy,\n  PyProxyWithLength,\n  PyProxyDict,\n  PyProxyWithGet,\n  PyProxyWithSet,\n  PyProxyWithHas,\n  PyProxyIterable,\n  PyProxyIterator,\n  PyProxyAwaitable,\n  PyProxyBuffer,\n  PyProxyCallable,\n  TypedArray,\n  PyBuffer,\n} from \"./pyproxy.gen\";\n\nexport type Py2JsResult = any;\n\nlet runPythonInternal_dict: PyProxy; // Initialized in finalizeBootstrap\n/**\n * Just like `runPython` except uses a different globals dict and gets\n * `eval_code` from `_pyodide` so that it can work before `pyodide` is imported.\n * @private\n */\nAPI.runPythonInternal = function (code: string): any {\n  return API._pyodide._base.eval_code(code, runPythonInternal_dict);\n};\n\n/**\n * A proxy around globals that falls back to checking for a builtin if has or\n * get fails to find a global with the given key. Note that this proxy is\n * transparent to js2python: it won't notice that this wrapper exists at all and\n * will translate this proxy to the globals dictionary.\n * @private\n */\nfunction wrapPythonGlobals(\n  globals_dict: PyProxyDict,\n  builtins_dict: PyProxyDict\n) {\n  return new Proxy(globals_dict, {\n    get(target, symbol) {\n      if (symbol === \"get\") {\n        return (key: any) => {\n          let result = target.get(key);\n          if (result === undefined) {\n            result = builtins_dict.get(key);\n          }\n          return result;\n        };\n      }\n      if (symbol === \"has\") {\n        return (key: any) => target.has(key) || builtins_dict.has(key);\n      }\n      return Reflect.get(target, symbol);\n    },\n  });\n}\n\nfunction unpackPyodidePy(pyodide_py_tar: Uint8Array) {\n  const fileName = \"/pyodide_py.tar\";\n  let stream = Module.FS.open(fileName, \"w\");\n  Module.FS.write(\n    stream,\n    pyodide_py_tar,\n    0,\n    pyodide_py_tar.byteLength,\n    undefined,\n    true\n  );\n  Module.FS.close(stream);\n  const code_ptr = Module.stringToNewUTF8(`\nfrom sys import version_info\npyversion = f\"python{version_info.major}.{version_info.minor}\"\nimport shutil\nshutil.unpack_archive(\"/pyodide_py.tar\", f\"/lib/{pyversion}/site-packages/\")\ndel shutil\nimport importlib\nimportlib.invalidate_caches()\ndel importlib\n    `);\n  let errcode = Module._PyRun_SimpleString(code_ptr);\n  if (errcode) {\n    throw new Error(\"OOPS!\");\n  }\n  Module._free(code_ptr);\n  Module.FS.unlink(fileName);\n}\n\n/**\n * This function is called after the emscripten module is finished initializing,\n * so eval_code is newly available.\n * It finishes the bootstrap so that once it is complete, it is possible to use\n * the core `pyodide` apis. (But package loading is not ready quite yet.)\n * @private\n */\nfunction finalizeBootstrap(config: ConfigType) {\n  // First make internal dict so that we can use runPythonInternal.\n  // runPythonInternal uses a separate namespace, so we don't pollute the main\n  // environment with variables from our setup.\n  runPythonInternal_dict = API._pyodide._base.eval_code(\"{}\") as PyProxy;\n  API.importlib = API.runPythonInternal(\"import importlib; importlib\");\n  let import_module = API.importlib.import_module;\n\n  API.sys = import_module(\"sys\");\n  API.sys.path.insert(0, config.homedir);\n\n  // Set up globals\n  let globals = API.runPythonInternal(\n    \"import __main__; __main__.__dict__\"\n  ) as PyProxyDict;\n  let builtins = API.runPythonInternal(\n    \"import builtins; builtins.__dict__\"\n  ) as PyProxyDict;\n  API.globals = wrapPythonGlobals(globals, builtins);\n\n  // Set up key Javascript modules.\n  let importhook = API._pyodide._importhook;\n  importhook.register_js_finder();\n  importhook.register_js_module(\"js\", config.jsglobals);\n\n  let pyodide = makePublicAPI();\n  importhook.register_js_module(\"pyodide_js\", pyodide);\n\n  // import pyodide_py. We want to ensure that as much stuff as possible is\n  // already set up before importing pyodide_py to simplify development of\n  // pyodide_py code (Otherwise it's very hard to keep track of which things\n  // aren't set up yet.)\n  API.pyodide_py = import_module(\"pyodide\");\n  API.package_loader = import_module(\"pyodide._package_loader\");\n  API.version = API.pyodide_py.__version__;\n\n  // copy some last constants onto public API.\n  pyodide.pyodide_py = API.pyodide_py;\n  pyodide.version = API.version;\n  pyodide.globals = API.globals;\n  return pyodide;\n}\n\ndeclare function _createPyodideModule(Module: any): Promise<void>;\n\n/**\n *  If indexURL isn't provided, throw an error and catch it and then parse our\n *  file name out from the stack trace.\n *\n *  Question: But getting the URL from error stack trace is well... really\n *  hacky. Can't we use\n *  [`document.currentScript`](https://developer.mozilla.org/en-US/docs/Web/API/Document/currentScript)\n *  or\n *  [`import.meta.url`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/import.meta)\n *  instead?\n *\n *  Answer: `document.currentScript` works for the browser main thread.\n *  `import.meta` works for es6 modules. In a classic webworker, I think there\n *  is no approach that works. Also we would need some third approach for node\n *  when loading a commonjs module using `require`. On the other hand, this\n *  stack trace approach works for every case without any feature detection\n *  code.\n */\nfunction calculateIndexURL(): string {\n  let err;\n  try {\n    throw new Error();\n  } catch (e) {\n    err = e;\n  }\n  const fileName = ErrorStackParser.parse(err)[0].fileName!;\n  return fileName.slice(0, fileName.lastIndexOf(\"/\"));\n}\n\n/**\n * See documentation for loadPyodide.\n * @private\n */\ntype ConfigType = {\n  indexURL: string;\n  homedir: string;\n  fullStdLib?: boolean;\n  stdin?: () => string;\n  stdout?: (msg: string) => void;\n  stderr?: (msg: string) => void;\n  jsglobals?: object;\n};\n\n/**\n * Load the main Pyodide wasm module and initialize it.\n *\n * Only one copy of Pyodide can be loaded in a given JavaScript global scope\n * because Pyodide uses global variables to load packages. If an attempt is made\n * to load a second copy of Pyodide, :any:`loadPyodide` will throw an error.\n * (This can be fixed once `Firefox adopts support for ES6 modules in webworkers\n * <https://bugzilla.mozilla.org/show_bug.cgi?id=1247687>`_.)\n *\n * @returns The :ref:`js-api-pyodide` module.\n * @memberof globalThis\n * @async\n */\nexport async function loadPyodide(\n  options: {\n    /**\n     * The URL from which Pyodide will load the main Pyodide runtime and\n     * packages. Defaults to the url that pyodide is loaded from with the file\n     * name (pyodide.js or pyodide.mjs) removed. It is recommended that you\n     * leave this undefined, providing an incorrect value can cause broken\n     * behavior.\n     */\n    indexURL?: string;\n\n    /**\n     * The home directory which Pyodide will use inside virtual file system. Default: \"/home/pyodide\"\n     */\n    homedir?: string;\n\n    /** Load the full Python standard library.\n     * Setting this to false excludes following modules: distutils.\n     * Default: true\n     */\n    fullStdLib?: boolean;\n    /**\n     * Override the standard input callback. Should ask the user for one line of input.\n     */\n    stdin?: () => string;\n    /**\n     * Override the standard output callback.\n     * Default: undefined\n     */\n    stdout?: (msg: string) => void;\n    /**\n     * Override the standard error output callback.\n     * Default: undefined\n     */\n    stderr?: (msg: string) => void;\n    jsglobals?: object;\n  } = {}\n): Promise<PyodideInterface> {\n  if ((loadPyodide as any).inProgress) {\n    throw new Error(\"Pyodide is already loading.\");\n  }\n  if (!options.indexURL) {\n    options.indexURL = calculateIndexURL();\n  }\n  (loadPyodide as any).inProgress = true;\n\n  const default_config = {\n    fullStdLib: true,\n    jsglobals: globalThis,\n    stdin: globalThis.prompt ? globalThis.prompt : undefined,\n    homedir: \"/home/pyodide\",\n  };\n  let config = Object.assign(default_config, options) as ConfigType;\n  if (!config.indexURL.endsWith(\"/\")) {\n    config.indexURL += \"/\";\n  }\n  await initNodeModules();\n  let packageIndexReady = initializePackageIndex(config.indexURL);\n  let pyodide_py_tar_promise = _loadBinaryFile(\n    config.indexURL,\n    \"pyodide_py.tar\"\n  );\n\n  setStandardStreams(config.stdin, config.stdout, config.stderr);\n  setHomeDirectory(config.homedir);\n\n  let moduleLoaded = new Promise((r) => (Module.postRun = r));\n\n  // locateFile tells Emscripten where to find the data files that initialize\n  // the file system.\n  Module.locateFile = (path: string) => config.indexURL + path;\n  const scriptSrc = `${config.indexURL}pyodide.asm.js`;\n  await loadScript(scriptSrc);\n\n  // _createPyodideModule is specified in the Makefile by the linker flag:\n  // `-s EXPORT_NAME=\"'_createPyodideModule'\"`\n  await _createPyodideModule(Module);\n\n  // There is some work to be done between the module being \"ready\" and postRun\n  // being called.\n  await moduleLoaded;\n\n  // Disable further loading of Emscripten file_packager stuff.\n  Module.locateFile = (path: string) => {\n    throw new Error(\"Didn't expect to load any more file_packager files!\");\n  };\n\n  const pyodide_py_tar = await pyodide_py_tar_promise;\n  unpackPyodidePy(pyodide_py_tar);\n  Module._pyodide_init();\n\n  let pyodide = finalizeBootstrap(config);\n  // Module.runPython works starting here.\n\n  await packageIndexReady;\n  if (config.fullStdLib) {\n    await loadPackage([\"distutils\"]);\n  }\n  pyodide.runPython(\"print('Python initialization complete')\");\n  return pyodide;\n}\n"],"names":["__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","apply","StackFrame","FIREFOX_SAFARI_STACK_REGEXP","CHROME_IE_STACK_REGEXP","SAFARI_NATIVE_CODE_REGEXP","_isNumber","n","isNaN","parseFloat","isFinite","_capitalize","str","charAt","toUpperCase","substring","_getter","p","this","booleanProps","numericProps","stringProps","arrayProps","objectProps","props","concat","obj","i","length","undefined","prototype","getArgs","args","setArgs","v","Object","toString","call","TypeError","getEvalOrigin","evalOrigin","setEvalOrigin","fileName","getFileName","lineNumber","getLineNumber","columnNumber","getColumnNumber","functionName","getFunctionName","getIsEval","fromString","argsStartIndex","indexOf","argsEndIndex","lastIndexOf","split","locationString","parts","exec","Boolean","j","Number","k","String","factory","require$$0","parse","error","stacktrace","parseOpera","stack","match","parseV8OrIE","parseFFOrSafari","Error","extractLocation","urlLike","replace","filter","line","map","sanitizedLine","location","tokens","slice","locationParts","pop","join","source","functionNameRegex","matches","message","parseOpera9","parseOpera11","parseOpera10","lineRE","lines","len","push","argsRaw","functionCall","shift","Module","noImageDecoding","noAudioDecoding","noWasmDecoding","preloadedWasm","preRun","API","Hiwire","hiwire","Tests","setStandardStreams","stdin","stdout","stderr","print","printErr","FS","init","encoder","TextEncoder","input","Uint8Array","inputIndex","stdinWrapper","text","endsWith","encode","character","console","createStdinWrapper","tests","IN_NODE","process","release","name","browser","nodePathMod","nodeFetch","nodeVmMod","nodeFsPromisesMod","_loadBinaryFile","loadScript","indexURL","path","includes","response","ok","arrayBuffer","data","readFile","buffer","byteOffset","byteLength","base","URL","url","fetch","globalThis","document","import","importScripts","runInThisContext","isPyProxy","jsobj","$$","type","FinalizationRegistry","finalizationRegistry","ptr","cache","leaked","pyproxy_decref_cache","_Py_DecRef","fatal_error","register","unregister","trace_pyproxy_alloc","trace_pyproxy_dealloc","pyproxy_alloc_map","Map","_getPtr","destroyed_msg","enable_pyproxy_allocation_tracing","proxy","set","delete","disable_pyproxy_allocation_tracing","pyproxy_new","ptrobj","target","flags","_pyproxy_getflags","cls","getPyProxyClass","Reflect","construct","Function","create","cacheId","new_value","refcnt","defineProperty","_Py_IncRef","Proxy","PyProxyHandlers","pyproxyClassMap","FLAG_TYPE_PAIRS","PyProxyLengthMethods","PyProxyGetItemMethods","PyProxySetItemMethods","PyProxyContainsMethods","PyProxyIterableMethods","PyProxyIteratorMethods","PyProxyAwaitableMethods","PyProxyBufferMethods","PyProxyCallableMethods","get","descriptors","feature_flag","methods","assign","getOwnPropertyDescriptors","constructor","getOwnPropertyDescriptor","PyProxyClass","$$flags","new_proto","NewPyProxyClass","PyProxy_getPtr","cache_map","pop_value","proxy_id","values","cache_entry","pyproxy_destroy","proxy_repr","proxy_type","pyodide_fatal_error","callPyObjectKwargs","jsargs","kwargs","num_pos_args","kwargs_names","keys","kwargs_values","num_kwargs","idresult","idargs","idkwnames","__pyproxy_apply","decref","_pythonexc2js","_ensure_future","callPyObject","Symbol","toStringTag","__pyproxy_type","jsref_repr","__pyproxy_repr","destroy","copy","toJs","depth","pyproxies","create_pyproxies","dict_converter","default_converter","proxies_id","dict_converter_id","default_converter_id","_python2js_custom","supportsLength","supportsGet","supportsSet","supportsHas","isIterable","isIterator","isAwaitable","isBuffer","isCallable","_PyObject_Size","key","idkey","__pyproxy_getitem","_PyErr_Occurred","errcode","idval","__pyproxy_setitem","__pyproxy_delitem","has","__pyproxy_contains","iterator","iterptr","token","_PyObject_GetIter","item","__pyproxy_iter_next","iter_helper","arg","status","idarg","stackTop","stackSave","res_ptr","stackAlloc","__pyproxyGen_Send","HEAPU32","stackRestore","isExtensible","jskey","startsWith","__pyproxy_hasattr","python_hasattr","__pyproxy_getattr","python_getattr","jsval","descr","writable","__pyproxy_setattr","python_setattr","deleteProperty","__pyproxy_delattr","python_delattr","configurable","ownKeys","__pyproxy_ownKeys","jsthis","promise","resolveHandle","rejectHandle","resolve_handle_id","reject_handle_id","__pyproxy_ensure_future","onFulfilled","onRejected","catch","finally","onFinally","callKwargs","baseURL","type_to_array_map","Int8Array","Uint8ClampedArray","Int16Array","Uint16Array","Int32Array","Uint32Array","BigInt64Array","BigUint64Array","Float32Array","Float64Array","DataView","getBuffer","ArrayType","orig_stack_ptr","buffer_struct_ptr","_buffer_struct_size","this_ptr","__pyproxy_get_buffer","startByteOffset","minByteOffset","maxByteOffset","readonly","format_ptr","itemsize","shape","strides","view_ptr","c_contiguous","f_contiguous","format","UTF8ToString","success","bigEndian","processBufferFormatString","alignment","parseInt","numBytes","numEntries","offset","PyBuffer","ndim","nbytes","_view_ptr","_released","_PyBuffer_Release","_PyMem_Free","package_uri_regexp","_uri_to_package_name","package_uri","toLowerCase","addPackageToLoad","toLoad","toLoadShared","pkg_info","packages","shared_library","loadedPackages","dep_name","depends","downloadPackage","channel","file_name","installPackage","pkg","install_dir","imports","filename","dynlibs","package_loader","unpack_buffer","calculate_dynlibs","dynlib","loadDynlib","createLock","_lock","old_lock","releaseLock","acquireDynlibLock","lib","shared","byteArray","lookupPath","node","mount","filesystems","MEMFS","getFileDataAsTypedArray","releaseDynlibLock","module","loadWebAssemblyModule","loadAsync","nodelete","allowUndefined","loadDynamicLibrary","global","warn","acquirePackageLock","loadPackage","names","messageCallback","errorCallback","log","Array","isArray","pkgname","recursiveDependencies","uri","loaded","size","packageNames","sharedLibraryLoadPromises","packageLoadPromises","failed","sharedLibraryInstallPromises","packageInstallPromises","err","all","reportUndefinedSymbols","successNames","failedNames","entries","importlib","invalidate_caches","ensureCaughtObjectIsError","msg","dump_traceback","__Py_DumpTraceback","_PyGILState_GetThisThreadState","fatal_error_occurred","convertCppException","inTestHoist","public_api","enumerable","on_fatal","err2","CppException","ty","super","exc_type_name","is_exception_subclass","adjusted_ptr","base_exception_type","_exc_type","caught_exception_type","ExceptionInfo","get_type","exceptionThrowBuf","HEAP32","demangle","_exc_typename","___cxa_can_catch","cppExceptionInfo","msgPtr","_exc_what","isPyodideFrame","frame","funcName","handle_js_error","_PropagatePythonError","weirdCatch","restored_error","PythonError","_restore_sys_last_exception","__error_address","ErrorStackParser","_","eidx","_JsProxy_create","_set_error","isErrorStart","funcnameAddr","stringToNewUTF8","fileNameAddr","__PyTraceback_Add","_free","error_address","oldLimit","stackTraceLimit","Infinity","fail_test","runPythonPositionalGlobalsDeprecationWarned","runPython","code","options","globals","pyodide_py","eval_code","loadPackagesFromImports","pyimports","find_imports","_import_name_to_package_name","Set","add","from","runPythonAsync","eval_code_async","registerJsModule","register_js_module","registerComlink","Comlink","_Comlink","unregisterJsModule","unregister_js_module","toPy","defaultConverter","obj_id","py_result","js2python_convert","_JsProxy_Check","_python2js","pyimport","mod_name","import_module","runPythonInternal_dict","unpackArchivePositionalExtractDirDeprecationWarned","unpackArchive","extractDir","extract_dir","setInterruptBuffer","interrupt_buffer","HEAP8","_Py_EMSCRIPTEN_SIGNAL_HANDLING","Py_EmscriptenSignalBuffer","checkInterrupt","__PyErr_CheckSignals","makePublicAPI","namespace","version","_module","_api","finalizeBootstrap","config","_pyodide","_base","runPythonInternal","sys","insert","homedir","builtins","builtins_dict","symbol","importhook","_importhook","register_js_finder","jsglobals","pyodide","__version__","loadPyodide","inProgress","calculateIndexURL","default_config","fullStdLib","prompt","default","initNodeModules","packageIndexReady","package_json","package_string","JSON","json","import_name","initializePackageIndex","pyodide_py_tar_promise","mkdirTree","ENV","HOME","chdir","moduleLoaded","r","postRun","locateFile","scriptSrc","_createPyodideModule","pyodide_py_tar","stream","open","write","close","code_ptr","_PyRun_SimpleString","unlink","unpackPyodidePy","_pyodide_init","saveState","_state","save_state","restoreState","state","restore_state"],"mappings":"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"}